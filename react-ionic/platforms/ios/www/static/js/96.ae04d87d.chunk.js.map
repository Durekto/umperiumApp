{"version":3,"sources":["../node_modules/ionicons/dist/esm/legacy/css-shim-3ea8955c-3ea8955c.js"],"names":["StyleNode","this","start","end","previous","parent","rules","parsedCssText","cssText","atRule","type","keyframesName","selector","parsedSelector","parse","text","parseCss","node","t","substring","trim","ss","s","replace","code","arguments","repeat","length","_expandUnicodeEscapes","RX","multipleSpaces","lastIndexOf","indexOf","AT_START","MEDIA_START","types","MEDIA_RULE","match","keyframesRule","KEYFRAMES_RULE","split","pop","VAR_START","MIXIN_RULE","STYLE_RULE","r$","i","l","r","root","n","OPEN_BRACE","p","push","CLOSE_BRACE","lex","comments","port","customProp","mixinProp","mixinApply","varApply","findRegex","regex","offset","VAR_USAGE_START","VAR_ASSIGN_START","COMMENTS","TRAILING_LINES","compileVar","template","varMeta","varPos","endVar","count","c","findVarEndIndex","_a","propName","fallback","slice","join","undefined","parseVar","compileTemplate","params","props","prop","executeTemplate","resolveVar","final","findEndValue","onStr","double","index","assignPos","removeCustomAssigns","segments","resolveValues","selectors","forEach","declarations","dec","value","propsValues","entries","Object","_loop_1","dirty","key","propValue","getSelectors","filter","rule","xArray","FIND_DECLARATIONS","exec","normalizeValue","important","getDeclarations","specificity","nu","endsWith","substr","getSelectorsForScopes","scopes","scope","apply","parseCSS","original","ast","usesCssVars","addGlobalStyle","globalScopes","styleEl","css","innerHTML","replaceScope","oldScopeId","newScopeId","find","RegExp","loadDocument","doc","styleElms","querySelectorAll","loadDocumentStyles","promises","linkElms","addGlobalLink","Promise","all","loadDocumentLinks","linkElm","url","href","fetch","then","rsp","CSS_VARIABLE_REGEXP","test","parentNode","CSS_URL_REGEXP","lastIndex","hasRelativeUrls","originalUrl","basePath","fullMatch","relativeUrl","fixRelativeUrls","createElement","setAttribute","insertBefore","remove","catch","err","console","error","CustomStyle","win","hostStyleMap","WeakMap","hostScopeMap","scopesMap","Map","prototype","initShim","_this","resolve","requestAnimationFrame","addLink","linkEl","updateGlobal","createHostStyle","hostEl","cssScopeId","isScoped","has","Error","baseScope","registerHostTemplate","scopeId","set","map","segment","sel","assign","reScope","removeHost","get","delete","updateHost","activeSelectors","concat","hostTemplateMap","parentElement","getScopesForElement","el","matches","sort","a","b","getActiveSelectors","updateGlobalScopes","window","__stencil_cssshim","CSS","supports","document"],"mappings":"oGAKA,IAAIA,EACA,WACIC,KAAKC,MAAQ,EACbD,KAAKE,IAAM,EACXF,KAAKG,SAAW,KAChBH,KAAKI,OAAS,KACdJ,KAAKK,MAAQ,KACbL,KAAKM,cAAgB,GACrBN,KAAKO,QAAU,GACfP,KAAKQ,QAAS,EACdR,KAAKS,KAAO,EACZT,KAAKU,cAAgB,GACrBV,KAAKW,SAAW,GAChBX,KAAKY,eAAiB,IAS9B,SAASC,EAAMC,GAEX,OA8CJ,SAASC,EAASC,EAAMF,GACpB,IAAIG,EAAIH,EAAKI,UAAUF,EAAI,MAAWA,EAAI,IAAU,GAEpD,GADAA,EAAI,cAAoBA,EAAI,QAAcC,EAAEE,OACxCH,EAAKZ,OAAQ,CACb,IAAIgB,EAAKJ,EAAKb,SAAWa,EAAKb,SAAL,IAAuBa,EAAKZ,OAAL,MAMhDa,GAHAA,GADAA,EAwCR,SAA+BI,GAC3B,OAAOA,EAAEC,QAAQ,yBAAyB,WAEtC,IADA,IAAIC,EAAOC,UAAU,GAAIC,EAAS,EAAIF,EAAKG,OACpCD,KACHF,EAAO,IAAMA,EAEjB,MAAO,KAAOA,KA9CVI,CADJV,EAAIH,EAAKI,UAAUE,EAAIJ,EAAI,MAAY,KAEjCM,QAAQM,EAAGC,eAAgB,MAG3BX,UAAUD,EAAEa,YAAY,KAAO,GACrC,IAAIT,EAAIL,EAAI,eAAqBA,EAAI,SAAeC,EAAEE,OACtDH,EAAI,OAAsC,IAAxBK,EAAEU,QAAQC,GAExBhB,EAAI,OAC2B,IAA3BK,EAAEU,QAAQE,GACVjB,EAAI,KAAWkB,EAAMC,WAEhBd,EAAEe,MAAMR,EAAGS,iBAChBrB,EAAI,KAAWkB,EAAMI,eACrBtB,EAAI,cAAoBA,EAAI,SAAauB,MAAMX,EAAGC,gBAAgBW,OAIzC,IAAzBnB,EAAEU,QAAQU,GACVzB,EAAI,KAAWkB,EAAMQ,WAGrB1B,EAAI,KAAWkB,EAAMS,WAIjC,IAAIC,EAAK5B,EAAI,MACb,GAAI4B,EACA,IAAK,IAAIC,EAAI,EAAGC,EAAIF,EAAGlB,OAAQqB,OAAI,EAASF,EAAIC,IAAOC,EAAIH,EAAGC,IAAKA,IAC/D9B,EAASgC,EAAGjC,GAGpB,OAAOE,EApFAD,CAeX,SAAaD,GACT,IAAIkC,EAAO,IAAIjD,EACfiD,EAAI,MAAY,EAChBA,EAAI,IAAUlC,EAAKY,OAEnB,IADA,IAAIuB,EAAID,EACCH,EAAI,EAAGC,EAAIhC,EAAKY,OAAQmB,EAAIC,EAAGD,IACpC,GAAI/B,EAAK+B,KAAOK,EAAY,CACnBD,EAAC,QACFA,EAAC,MAAY,IAEjB,IAAIE,EAAIF,EACJ9C,EAAWgD,EAAC,MAAUA,EAAC,MAAUzB,OAAS,IAAM,MACpDuB,EAAI,IAAIlD,GACP,MAAY8C,EAAI,EACjBI,EAAC,OAAaE,EACdF,EAAC,SAAe9C,EAChBgD,EAAC,MAAUC,KAAKH,QAEXnC,EAAK+B,KAAOQ,IACjBJ,EAAC,IAAUJ,EAAI,EACfI,EAAIA,EAAC,QAAcD,GAG3B,OAAOA,EAtCSM,CADhBxC,EAAaA,EASEQ,QAAQM,EAAG2B,SAAU,IAAIjC,QAAQM,EAAG4B,KAAM,KAR9B1C,GAsG/B,IAAIoB,EAAQ,CACRS,WAAY,EACZL,eAAgB,EAChBH,WAAY,EACZO,WAAY,KAEZQ,EAAa,IACbG,EAAc,IAEdzB,EAAK,CACL2B,SAAU,oCACVC,KAAM,mBACNC,WAAY,oDACZC,UAAW,6DACXC,WAAY,0CACZC,SAAU,4CACVvB,cAAe,oBACfR,eAAgB,QAEhBY,EAAY,KACZR,EAAc,SACdD,EAAW,IACf,SAAS6B,EAAUC,EAAOvD,EAASwD,GAC/BD,EAAK,UAAgB,EACrB,IAAIf,EAAIxC,EAAQW,UAAU6C,GAAQ3B,MAAM0B,GACxC,GAAIf,EAAG,CACH,IAAI9C,EAAQ8D,EAAShB,EAAC,MACtB,MAAO,CACH9C,MAAOA,EACPC,IAAKD,EAAQ8C,EAAE,GAAGrB,QAG1B,OAAO,KAEX,IAAIsC,EAAkB,UAClBC,EAAmB,iBACnBC,EAAW,oCACXC,EAAiB,cA0CrB,SAASC,EAAW7D,EAAS8D,EAAUN,GACnC,IAAIO,EAhBR,SAAkB/D,EAASwD,GACvB,IAAIQ,EAASV,EAAUG,EAAiBzD,EAASwD,GACjD,IAAKQ,EACD,OAAO,KAEX,IAAIC,EAtBR,SAAyBjE,EAASwD,GAG9B,IAFA,IAAIU,EAAQ,EACR5B,EAAIkB,EACDlB,EAAItC,EAAQmB,OAAQmB,IAAK,CAC5B,IAAI6B,EAAInE,EAAQsC,GAChB,GAAU,MAAN6B,EACAD,SAEC,GAAU,MAANC,KACLD,GACa,EACT,OAAO5B,EAAI,EAIvB,OAAOA,EAOM8B,CAAgBpE,EAASgE,EAAOtE,OAEzC2E,EADarE,EAAQW,UAAUqD,EAAOrE,IAAKsE,EAAS,GACpCjC,MAAM,KAAMsC,EAAWD,EAAG,GAAIE,EAAWF,EAAGG,MAAM,GACtE,MAAO,CACH9E,MAAOsE,EAAOtE,MACdC,IAAKsE,EACLK,SAAUA,EAAS1D,OACnB2D,SAAUA,EAASpD,OAAS,EAAIoD,EAASE,KAAK,KAAK7D,YAAS8D,GAIlDC,CAAS3E,EAASwD,GAChC,IAAKO,EAED,OADAD,EAASjB,KAAK7C,EAAQW,UAAU6C,EAAQxD,EAAQmB,SACzCnB,EAAQmB,OAEnB,IAAImD,EAAWP,EAAQO,SACnBC,EAA+B,MAApBR,EAAQQ,SAAmBK,EAAgBb,EAAQQ,eAAYG,EAE9E,OADAZ,EAASjB,KAAK7C,EAAQW,UAAU6C,EAAQO,EAAQrE,QAAQ,SAAUmF,GAAU,OAjDhF,SAAoBC,EAAOC,EAAMR,GAC7B,OAAIO,EAAMC,GACCD,EAAMC,GAEbR,EACOS,EAAgBT,EAAUO,GAE9B,GA0C4EG,CAAWJ,EAAQP,EAAUC,MACzGR,EAAQpE,IAEnB,SAASqF,EAAgBlB,EAAUgB,GAE/B,IADA,IAAII,EAAQ,GACH5C,EAAI,EAAGA,EAAIwB,EAAS3C,OAAQmB,IAAK,CACtC,IAAIxB,EAAIgD,EAASxB,GACjB4C,GAAuB,kBAANpE,EACXA,EACAA,EAAEgE,GAEZ,OAAOI,EAEX,SAASC,EAAanF,EAASwD,GAI3B,IAHA,IAAI4B,GAAQ,EACRC,GAAS,EACT/C,EAAIkB,EACDlB,EAAItC,EAAQmB,OAAQmB,IAAK,CAC5B,IAAI6B,EAAInE,EAAQsC,GAChB,GAAI8C,EACIC,GAAgB,MAANlB,IACViB,GAAQ,GAEPC,GAAgB,MAANlB,IACXiB,GAAQ,QAIZ,GAAU,MAANjB,EACAiB,GAAQ,EACRC,GAAS,OAER,GAAU,MAANlB,EACLiB,GAAQ,EACRC,GAAS,MAER,IAAU,MAANlB,EACL,OAAO7B,EAAI,EAEV,GAAU,MAAN6B,EACL,OAAO7B,GAInB,OAAOA,EAkBX,SAASsC,EAAgB5E,GACrB,IAAIsF,EAAQ,EAEZtF,EAnBJ,SAA6BA,GAGzB,IAFA,IAAIkF,EAAQ,GACR1B,EAAS,IACA,CACT,IAAI+B,EAAYjC,EAAUI,EAAkB1D,EAASwD,GACjD9D,EAAQ6F,EAAYA,EAAU7F,MAAQM,EAAQmB,OAElD,GADA+D,GAASlF,EAAQW,UAAU6C,EAAQ9D,IAC/B6F,EAIA,MAHA/B,EAAS2B,EAAanF,EAASN,GAMvC,OAAOwF,EAKGM,CADVxF,EAAUA,EAAQe,QAAQ4C,EAAU,KAE/B5C,QAAQ6C,EAAgB,IAE7B,IADA,IAAI6B,EAAW,GACRH,EAAQtF,EAAQmB,QACnBmE,EAAQzB,EAAW7D,EAASyF,EAAUH,GAE1C,OAAOG,EAEX,SAASC,EAAcC,GACnB,IAAIb,EAAQ,GACZa,EAAUC,SAAQ,SAAUxF,GACxBA,EAASyF,aAAaD,SAAQ,SAAUE,GACpChB,EAAMgB,EAAIf,MAAQe,EAAIC,YAmB9B,IAhBA,IAAIC,EAAc,GACdC,EAAUC,OAAOD,QAAQnB,GACzBqB,EAAU,SAAU7D,GACpB,IAAI8D,GAAQ,EASZ,GARAH,EAAQL,SAAQ,SAAUvB,GACtB,IAAIgC,EAAMhC,EAAG,GACTiC,EAAYtB,EADSX,EAAG,GACW2B,GACnCM,IAAcN,EAAYK,KAC1BL,EAAYK,GAAOC,EACnBF,GAAQ,OAGXA,EACD,MAAO,SAGN9D,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAEzB,GAAgB,UADF6D,IAEV,MAER,OAAOH,EAEX,SAASO,EAAa9D,EAAM6C,GAIxB,QAHc,IAAVA,IACAA,EAAQ,IAEP7C,EAAK3C,MACN,MAAO,GAEX,IAAI6F,EAAY,GAkBhB,OAjBAlD,EAAK3C,MACA0G,QAAO,SAAUC,GAAQ,OAAOA,EAAKvG,OAASyB,EAAMS,cACpDwD,SAAQ,SAAUa,GACnB,IAAIZ,EAqBZ,SAAyB7F,GACrB,IACI0G,EADAb,EAAe,GAEnB,KAAOa,EAASC,EAAkBC,KAAK5G,EAAQY,SAAS,CACpD,IAAIyD,EAAKwC,EAAeH,EAAO,IAAKX,EAAQ1B,EAAG0B,MAAOe,EAAYzC,EAAGyC,UACrEjB,EAAahD,KAAK,CACdkC,KAAM2B,EAAO,GAAG9F,OAChBmF,MAAOnB,EAAgBmB,GACvBe,UAAWA,IAGnB,OAAOjB,EAhCgBkB,CAAgBN,EAAKzG,SACpC6F,EAAa1E,OAAS,GACtBsF,EAAKpG,eAAe2B,MAAM,KAAK4D,SAAQ,SAAUxF,GAC7CA,EAAWA,EAASQ,OACpB+E,EAAU9C,KAAK,CACXzC,SAAUA,EACVyF,aAAcA,EACdmB,YAUT,EATSC,GAAI3B,OAIhBA,OAEGK,EAKX,IACIgB,EAAoB,0HAcxB,SAASE,EAAed,GACpB,IAEIe,GADJf,EAAQA,EAAMhF,QADF,SACiB,KAAKH,QACZsG,SAlBV,cAsBZ,OAHIJ,IACAf,EAAQA,EAAMoB,OAAO,EAAGpB,EAAM5E,OApBtB,aAoByCA,QAAQP,QAEtD,CACHmF,MAAOA,EACPe,UAAWA,GAyBnB,SAASM,EAAsBC,GAC3B,IAAI1B,EAAY,GAIhB,OAHA0B,EAAOzB,SAAQ,SAAU0B,GACrB3B,EAAU9C,KAAK0E,MAAM5B,EAAW2B,EAAM3B,cAEnCA,EAcX,SAAS6B,EAASC,GACd,IAAIC,EAAMpH,EAAMmH,GACZ3D,EAAWc,EAAgB6C,GAE/B,MAAO,CACHA,SAAUA,EACV3D,SAAUA,EACV6B,UAJYY,EAAamB,GAKzBC,YAAa7D,EAAS3C,OAAS,GAGvC,SAASyG,EAAeC,EAAcC,GAClC,IAAIC,EAAMP,EAASM,EAAQE,WAC3BD,EAAID,QAAUA,EACdD,EAAahF,KAAKkF,GAwBtB,SAASE,EAAaR,EAAUS,EAAYC,GAI5C,IAA2BC,EAAMrH,EAF7B,OAEuBqH,EAHS,MAAQF,EAGXnH,EAHuB,IAAMoH,EAA1DV,EAAsBA,EAIT1G,QAAQ,IAAIsH,OAAOD,EAAM,KAAMrH,GAEhD,SAASuH,EAAaC,EAAKV,GAEvB,OAUJ,SAA4BU,EAAKV,GAE7B,IADA,IAAIW,EAAYD,EAAIE,iBAAiB,4BAC5BnG,EAAI,EAAGA,EAAIkG,EAAUrH,OAAQmB,IAClCsF,EAAeC,EAAcW,EAAUlG,IAd3CoG,CAAmBH,EAAKV,GAG5B,SAA2BU,EAAKV,GAG5B,IAFA,IAAIc,EAAW,GACXC,EAAWL,EAAIE,iBAAiB,gCAC3BnG,EAAI,EAAGA,EAAIsG,EAASzH,OAAQmB,IACjCqG,EAAS9F,KAAKgG,EAAcN,EAAKV,EAAce,EAAStG,KAE5D,OAAOwG,QAAQC,IAAIJ,GARZK,CAAkBT,EAAKV,GAgBlC,SAASgB,EAAcN,EAAKV,EAAcoB,GACtC,IAAIC,EAAMD,EAAQE,KAClB,OAAOC,MAAMF,GAAKG,MAAK,SAAUC,GAAO,OAAOA,EAAI/I,UAAW8I,MAAK,SAAU9I,GACzE,KA0BiBwH,EA1BGxH,GA2BbiB,QAAQ,SAAW,GAAK+H,EAAoBC,KAAKzB,KA3B3BkB,EAAQQ,WAAY,EA+BzD,SAAyB1B,GAErB,OADA2B,EAAeC,UAAY,EACpBD,EAAeF,KAAKzB,IAhCf6B,CAAgBrJ,KAChBA,EAiChB,SAAyBwH,EAAK8B,GAE1B,IAAIC,EAAWD,EAAY9I,QAAQ,SAAU,IAE7C,OAAOgH,EAAIhH,QAAQ2I,GAAgB,SAAUK,EAAWb,GAGpD,IAAIc,EAAcF,EAAWZ,EAC7B,OAAOa,EAAUhJ,QAAQmI,EAAKc,MAzCfC,CAAgB1J,EAAM2I,IAEjC,IAAIpB,EAAUS,EAAI2B,cAAc,SAChCpC,EAAQqC,aAAa,cAAe,IACpCrC,EAAQE,UAAYzH,EACpBqH,EAAeC,EAAcC,GAC7BmB,EAAQQ,WAAWW,aAAatC,EAASmB,GACzCA,EAAQoB,SAiBpB,IAAyBtC,KAflBuC,OAAM,SAAUC,GACfC,QAAQC,MAAMF,MAatB,IAAIhB,EAAsB,6BAK1B,IAAIG,EAAiB,mEAgBrB,IAAIgB,EAA6B,WAC7B,SAASA,EAAYC,EAAKpC,GACtB9I,KAAKkL,IAAMA,EACXlL,KAAK8I,IAAMA,EACX9I,KAAKyE,MAAQ,EACbzE,KAAKmL,aAAe,IAAIC,QACxBpL,KAAKqL,aAAe,IAAID,QACxBpL,KAAKoI,aAAe,GACpBpI,KAAKsL,UAAY,IAAIC,IAkFzB,OAhFAN,EAAYO,UAAUC,SAAW,WAC7B,IAAIC,EAAQ1L,KACZ,OAAO,IAAIqJ,SAAQ,SAAUsC,GACzBD,EAAMR,IAAIU,uBAAsB,WAC5B/C,EAAa6C,EAAM5C,IAAK4C,EAAMtD,cAAcwB,MAAK,WAAc,OAAO+B,cAIlFV,EAAYO,UAAUK,QAAU,SAAUC,GACtC,IAAIJ,EAAQ1L,KACZ,OAAOoJ,EAAcpJ,KAAK8I,IAAK9I,KAAKoI,aAAc0D,GAAQlC,MAAK,WAC3D8B,EAAMK,mBAGdd,EAAYO,UAAUrD,eAAiB,SAAUE,GAC7CF,EAAenI,KAAKoI,aAAcC,GAClCrI,KAAK+L,gBAETd,EAAYO,UAAUQ,gBAAkB,SAAUC,EAAQC,EAAY3L,EAAS4L,GAC3E,GAAInM,KAAKqL,aAAae,IAAIH,GACtB,MAAM,IAAII,MAAM,8BAEpB,IAAIC,EAAYtM,KAAKuM,qBAAqBhM,EAAS2L,EAAYC,GAC3D9D,EAAUrI,KAAK8I,IAAI2B,cAAc,SAuBrC,OAtBK6B,EAAUpE,YAINiE,GAEL9D,EAAQ,QAAU6D,EAAaI,EAAUE,QAAU,IAAMxM,KAAKyE,MAC9D4D,EAAQE,UAAY,mBACpBvI,KAAKmL,aAAasB,IAAIR,EAAQ5D,GAC9BrI,KAAKqL,aAAaoB,IAAIR,EAlIlC,SAAiBpE,EAAO2E,GACpB,IAAInI,EAAWwD,EAAMxD,SAASqI,KAAI,SAAUC,GACxC,MAA2B,kBAAZA,EACTnE,EAAamE,EAAS9E,EAAM2E,QAASA,GACrCG,KAENzG,EAAY2B,EAAM3B,UAAUwG,KAAI,SAAUE,GAC1C,OAAOnG,OAAOoG,OAAO,GAAID,EAAK,CAAEjM,SAAU6H,EAAaoE,EAAIjM,SAAUkH,EAAM2E,QAASA,QAExF,OAAO/F,OAAOoG,OAAO,GAAIhF,EAAO,CAAExD,SAAUA,EACxC6B,UAAWA,EACXsG,QAASA,IAuHyBM,CAAQR,EAAWJ,IACjDlM,KAAKyE,UAIL6H,EAAUjE,QAAUA,EACfiE,EAAUpE,cACXG,EAAQE,UAAYhD,EAAgB+G,EAAUjI,SAAU,KAE5DrE,KAAKoI,aAAahF,KAAKkJ,GACvBtM,KAAK+L,eACL/L,KAAKqL,aAAaoB,IAAIR,EAAQK,IAlB9BjE,EAAQE,UAAYhI,EAoBjB8H,GAEX4C,EAAYO,UAAUuB,WAAa,SAAUd,GACzC,IAAI3D,EAAMtI,KAAKmL,aAAa6B,IAAIf,GAC5B3D,GACAA,EAAIsC,SAER5K,KAAKmL,aAAa8B,OAAOhB,GACzBjM,KAAKqL,aAAa4B,OAAOhB,IAE7BhB,EAAYO,UAAU0B,WAAa,SAAUjB,GACzC,IAAIpE,EAAQ7H,KAAKqL,aAAa2B,IAAIf,GAClC,GAAIpE,GAASA,EAAMK,aAAeL,EAAMsE,SAAU,CAC9C,IAAI9D,EAAUrI,KAAKmL,aAAa6B,IAAIf,GACpC,GAAI5D,EAAS,CACT,IACIhD,EAAQY,EAjO5B,SAA4BgG,EAAQZ,EAAcjD,GAE9C,IA2BmBlC,EAtBfiH,EAFcxF,EAHLS,EAAagF,OAS9B,SAA6BC,EAAiBrM,GAC1C,IAAI4G,EAAS,GACb,KAAO5G,GAAM,CACT,IAAI6G,EAAQwF,EAAgBL,IAAIhM,GAC5B6G,GACAD,EAAOxE,KAAKyE,GAEhB7G,EAAOA,EAAKsM,cAEhB,OAAO1F,EAlB0B2F,CAAoBlC,EAAcY,KAKjClF,QAAO,SAAUpG,GAAY,OA+BnE,SAAiB6M,EAAI7M,GACjB,MAAoB,UAAbA,GAAqC,SAAbA,GAAuB6M,EAAGC,QAAQ9M,GAhCK8M,CAAQxB,EAAQtL,EAASA,aAE/F,OAoBmBuF,EApBEiH,GAqBXO,MAAK,SAAUC,EAAGC,GACxB,OAAID,EAAEpG,cAAgBqG,EAAErG,YACboG,EAAEnG,GAAKoG,EAAEpG,GAEbmG,EAAEpG,YAAcqG,EAAErG,eAEtBrB,EA4LqB2H,CAAmB5B,EAAQjM,KAAKqL,aAAcrL,KAAKoI,eAEnEC,EAAQE,UAAYhD,EAAgBsC,EAAMxD,SAAUgB,MAIhE4F,EAAYO,UAAUO,aAAe,YA7KzC,SAA4BnE,GACxB,IACIvC,EAAQY,EADI0B,EAAsBC,IAEtCA,EAAOzB,SAAQ,SAAU0B,GACjBA,EAAMK,cACNL,EAAMQ,QAAQE,UAAYhD,EAAgBsC,EAAMxD,SAAUgB,OAyK9DyI,CAAmB9N,KAAKoI,eAE5B6C,EAAYO,UAAUe,qBAAuB,SAAUhM,EAASiM,EAASL,GACrE,IAAItE,EAAQ7H,KAAKsL,UAAU0B,IAAIR,GAO/B,OANK3E,KACDA,EAAQE,EAASxH,IACXiM,QAAUA,EAChB3E,EAAMsE,SAAWA,EACjBnM,KAAKsL,UAAUmB,IAAID,EAAS3E,IAEzBA,GAEJoD,EA1FsB,GA4F7BC,EAAM6C,OAIL7C,EAAI8C,mBAFI9C,EAAI+C,KAAO/C,EAAI+C,IAAIC,UAAYhD,EAAI+C,IAAIC,SAAS,QAAS,cAGlEhD,EAAI8C,kBAAoB,IAAI/C,EAAYC,EAAKiD","file":"static/js/96.ae04d87d.chunk.js","sourcesContent":["/*\r\nExtremely simple css parser. Intended to be not more than what we need\r\nand definitely not necessarily correct =).\r\n*/\r\n/** @unrestricted */\r\nvar StyleNode = /** @class */ (function () {\r\n    function StyleNode() {\r\n        this.start = 0;\r\n        this.end = 0;\r\n        this.previous = null;\r\n        this.parent = null;\r\n        this.rules = null;\r\n        this.parsedCssText = '';\r\n        this.cssText = '';\r\n        this.atRule = false;\r\n        this.type = 0;\r\n        this.keyframesName = '';\r\n        this.selector = '';\r\n        this.parsedSelector = '';\r\n    }\r\n    return StyleNode;\r\n}());\r\n// given a string of css, return a simple rule tree\r\n/**\r\n * @param {string} text\r\n * @return {StyleNode}\r\n */\r\nfunction parse(text) {\r\n    text = clean(text);\r\n    return parseCss(lex(text), text);\r\n}\r\n// remove stuff we don't care about that may hinder parsing\r\n/**\r\n * @param {string} cssText\r\n * @return {string}\r\n */\r\nfunction clean(cssText) {\r\n    return cssText.replace(RX.comments, '').replace(RX.port, '');\r\n}\r\n// super simple {...} lexer that returns a node tree\r\n/**\r\n * @param {string} text\r\n * @return {StyleNode}\r\n */\r\nfunction lex(text) {\r\n    var root = new StyleNode();\r\n    root['start'] = 0;\r\n    root['end'] = text.length;\r\n    var n = root;\r\n    for (var i = 0, l = text.length; i < l; i++) {\r\n        if (text[i] === OPEN_BRACE) {\r\n            if (!n['rules']) {\r\n                n['rules'] = [];\r\n            }\r\n            var p = n;\r\n            var previous = p['rules'][p['rules'].length - 1] || null;\r\n            n = new StyleNode();\r\n            n['start'] = i + 1;\r\n            n['parent'] = p;\r\n            n['previous'] = previous;\r\n            p['rules'].push(n);\r\n        }\r\n        else if (text[i] === CLOSE_BRACE) {\r\n            n['end'] = i + 1;\r\n            n = n['parent'] || root;\r\n        }\r\n    }\r\n    return root;\r\n}\r\n// add selectors/cssText to node tree\r\n/**\r\n * @param {StyleNode} node\r\n * @param {string} text\r\n * @return {StyleNode}\r\n */\r\nfunction parseCss(node, text) {\r\n    var t = text.substring(node['start'], node['end'] - 1);\r\n    node['parsedCssText'] = node['cssText'] = t.trim();\r\n    if (node.parent) {\r\n        var ss = node.previous ? node.previous['end'] : node.parent['start'];\r\n        t = text.substring(ss, node['start'] - 1);\r\n        t = _expandUnicodeEscapes(t);\r\n        t = t.replace(RX.multipleSpaces, ' ');\r\n        // TODO(sorvell): ad hoc; make selector include only after last ;\r\n        // helps with mixin syntax\r\n        t = t.substring(t.lastIndexOf(';') + 1);\r\n        var s = node['parsedSelector'] = node['selector'] = t.trim();\r\n        node['atRule'] = (s.indexOf(AT_START) === 0);\r\n        // note, support a subset of rule types...\r\n        if (node['atRule']) {\r\n            if (s.indexOf(MEDIA_START) === 0) {\r\n                node['type'] = types.MEDIA_RULE;\r\n            }\r\n            else if (s.match(RX.keyframesRule)) {\r\n                node['type'] = types.KEYFRAMES_RULE;\r\n                node['keyframesName'] = node['selector'].split(RX.multipleSpaces).pop();\r\n            }\r\n        }\r\n        else {\r\n            if (s.indexOf(VAR_START) === 0) {\r\n                node['type'] = types.MIXIN_RULE;\r\n            }\r\n            else {\r\n                node['type'] = types.STYLE_RULE;\r\n            }\r\n        }\r\n    }\r\n    var r$ = node['rules'];\r\n    if (r$) {\r\n        for (var i = 0, l = r$.length, r = void 0; (i < l) && (r = r$[i]); i++) {\r\n            parseCss(r, text);\r\n        }\r\n    }\r\n    return node;\r\n}\r\n/**\r\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\r\n * expanded form that doesn't require trailing space `\\000033`\r\n * @param {string} s\r\n * @return {string}\r\n */\r\nfunction _expandUnicodeEscapes(s) {\r\n    return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function () {\r\n        var code = arguments[1], repeat = 6 - code.length;\r\n        while (repeat--) {\r\n            code = '0' + code;\r\n        }\r\n        return '\\\\' + code;\r\n    });\r\n}\r\n/** @enum {number} */\r\nvar types = {\r\n    STYLE_RULE: 1,\r\n    KEYFRAMES_RULE: 7,\r\n    MEDIA_RULE: 4,\r\n    MIXIN_RULE: 1000\r\n};\r\nvar OPEN_BRACE = '{';\r\nvar CLOSE_BRACE = '}';\r\n// helper regexp's\r\nvar RX = {\r\n    comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\r\n    port: /@import[^;]*;/gim,\r\n    customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\r\n    mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\r\n    mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\r\n    varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\r\n    keyframesRule: /^@[^\\s]*keyframes/,\r\n    multipleSpaces: /\\s+/g\r\n};\r\nvar VAR_START = '--';\r\nvar MEDIA_START = '@media';\r\nvar AT_START = '@';\r\nfunction findRegex(regex, cssText, offset) {\r\n    regex['lastIndex'] = 0;\r\n    var r = cssText.substring(offset).match(regex);\r\n    if (r) {\r\n        var start = offset + r['index'];\r\n        return {\r\n            start: start,\r\n            end: start + r[0].length\r\n        };\r\n    }\r\n    return null;\r\n}\r\nvar VAR_USAGE_START = /\\bvar\\(/;\r\nvar VAR_ASSIGN_START = /\\B--[\\w-]+\\s*:/;\r\nvar COMMENTS = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim;\r\nvar TRAILING_LINES = /^[\\t ]+\\n/gm;\r\nfunction resolveVar(props, prop, fallback) {\r\n    if (props[prop]) {\r\n        return props[prop];\r\n    }\r\n    if (fallback) {\r\n        return executeTemplate(fallback, props);\r\n    }\r\n    return '';\r\n}\r\nfunction findVarEndIndex(cssText, offset) {\r\n    var count = 0;\r\n    var i = offset;\r\n    for (; i < cssText.length; i++) {\r\n        var c = cssText[i];\r\n        if (c === '(') {\r\n            count++;\r\n        }\r\n        else if (c === ')') {\r\n            count--;\r\n            if (count <= 0) {\r\n                return i + 1;\r\n            }\r\n        }\r\n    }\r\n    return i;\r\n}\r\nfunction parseVar(cssText, offset) {\r\n    var varPos = findRegex(VAR_USAGE_START, cssText, offset);\r\n    if (!varPos) {\r\n        return null;\r\n    }\r\n    var endVar = findVarEndIndex(cssText, varPos.start);\r\n    var varContent = cssText.substring(varPos.end, endVar - 1);\r\n    var _a = varContent.split(','), propName = _a[0], fallback = _a.slice(1);\r\n    return {\r\n        start: varPos.start,\r\n        end: endVar,\r\n        propName: propName.trim(),\r\n        fallback: fallback.length > 0 ? fallback.join(',').trim() : undefined\r\n    };\r\n}\r\nfunction compileVar(cssText, template, offset) {\r\n    var varMeta = parseVar(cssText, offset);\r\n    if (!varMeta) {\r\n        template.push(cssText.substring(offset, cssText.length));\r\n        return cssText.length;\r\n    }\r\n    var propName = varMeta.propName;\r\n    var fallback = varMeta.fallback != null ? compileTemplate(varMeta.fallback) : undefined;\r\n    template.push(cssText.substring(offset, varMeta.start), function (params) { return resolveVar(params, propName, fallback); });\r\n    return varMeta.end;\r\n}\r\nfunction executeTemplate(template, props) {\r\n    var final = '';\r\n    for (var i = 0; i < template.length; i++) {\r\n        var s = template[i];\r\n        final += (typeof s === 'string')\r\n            ? s\r\n            : s(props);\r\n    }\r\n    return final;\r\n}\r\nfunction findEndValue(cssText, offset) {\r\n    var onStr = false;\r\n    var double = false;\r\n    var i = offset;\r\n    for (; i < cssText.length; i++) {\r\n        var c = cssText[i];\r\n        if (onStr) {\r\n            if (double && c === '\"') {\r\n                onStr = false;\r\n            }\r\n            if (!double && c === '\\'') {\r\n                onStr = false;\r\n            }\r\n        }\r\n        else {\r\n            if (c === '\"') {\r\n                onStr = true;\r\n                double = true;\r\n            }\r\n            else if (c === '\\'') {\r\n                onStr = true;\r\n                double = false;\r\n            }\r\n            else if (c === ';') {\r\n                return i + 1;\r\n            }\r\n            else if (c === '}') {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n    return i;\r\n}\r\nfunction removeCustomAssigns(cssText) {\r\n    var final = '';\r\n    var offset = 0;\r\n    while (true) {\r\n        var assignPos = findRegex(VAR_ASSIGN_START, cssText, offset);\r\n        var start = assignPos ? assignPos.start : cssText.length;\r\n        final += cssText.substring(offset, start);\r\n        if (assignPos) {\r\n            offset = findEndValue(cssText, start);\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n    return final;\r\n}\r\nfunction compileTemplate(cssText) {\r\n    var index = 0;\r\n    cssText = cssText.replace(COMMENTS, '');\r\n    cssText = removeCustomAssigns(cssText)\r\n        .replace(TRAILING_LINES, '');\r\n    var segments = [];\r\n    while (index < cssText.length) {\r\n        index = compileVar(cssText, segments, index);\r\n    }\r\n    return segments;\r\n}\r\nfunction resolveValues(selectors) {\r\n    var props = {};\r\n    selectors.forEach(function (selector) {\r\n        selector.declarations.forEach(function (dec) {\r\n            props[dec.prop] = dec.value;\r\n        });\r\n    });\r\n    var propsValues = {};\r\n    var entries = Object.entries(props);\r\n    var _loop_1 = function (i) {\r\n        var dirty = false;\r\n        entries.forEach(function (_a) {\r\n            var key = _a[0], value = _a[1];\r\n            var propValue = executeTemplate(value, propsValues);\r\n            if (propValue !== propsValues[key]) {\r\n                propsValues[key] = propValue;\r\n                dirty = true;\r\n            }\r\n        });\r\n        if (!dirty) {\r\n            return \"break\";\r\n        }\r\n    };\r\n    for (var i = 0; i < 10; i++) {\r\n        var state_1 = _loop_1();\r\n        if (state_1 === \"break\")\r\n            break;\r\n    }\r\n    return propsValues;\r\n}\r\nfunction getSelectors(root, index) {\r\n    if (index === void 0) {\r\n        index = 0;\r\n    }\r\n    if (!root.rules) {\r\n        return [];\r\n    }\r\n    var selectors = [];\r\n    root.rules\r\n        .filter(function (rule) { return rule.type === types.STYLE_RULE; })\r\n        .forEach(function (rule) {\r\n        var declarations = getDeclarations(rule.cssText);\r\n        if (declarations.length > 0) {\r\n            rule.parsedSelector.split(',').forEach(function (selector) {\r\n                selector = selector.trim();\r\n                selectors.push({\r\n                    selector: selector,\r\n                    declarations: declarations,\r\n                    specificity: computeSpecificity(),\r\n                    nu: index\r\n                });\r\n            });\r\n        }\r\n        index++;\r\n    });\r\n    return selectors;\r\n}\r\nfunction computeSpecificity(_selector) {\r\n    return 1;\r\n}\r\nvar IMPORTANT = '!important';\r\nvar FIND_DECLARATIONS = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};{])+)|\\{([^}]*)\\}(?:(?=[;\\s}])|$))/gm;\r\nfunction getDeclarations(cssText) {\r\n    var declarations = [];\r\n    var xArray;\r\n    while (xArray = FIND_DECLARATIONS.exec(cssText.trim())) {\r\n        var _a = normalizeValue(xArray[2]), value = _a.value, important = _a.important;\r\n        declarations.push({\r\n            prop: xArray[1].trim(),\r\n            value: compileTemplate(value),\r\n            important: important,\r\n        });\r\n    }\r\n    return declarations;\r\n}\r\nfunction normalizeValue(value) {\r\n    var regex = /\\s+/gim;\r\n    value = value.replace(regex, ' ').trim();\r\n    var important = value.endsWith(IMPORTANT);\r\n    if (important) {\r\n        value = value.substr(0, value.length - IMPORTANT.length).trim();\r\n    }\r\n    return {\r\n        value: value,\r\n        important: important\r\n    };\r\n}\r\nfunction getActiveSelectors(hostEl, hostScopeMap, globalScopes) {\r\n    // computes the css scopes that might affect this particular element\r\n    var scopes = globalScopes.concat(getScopesForElement(hostScopeMap, hostEl));\r\n    // each scope might have an array of associated selectors\r\n    // let's flatten the complete array of selectors from all the scopes\r\n    var selectorSet = getSelectorsForScopes(scopes);\r\n    // we filter to only the selectors that matches the hostEl\r\n    var activeSelectors = selectorSet.filter(function (selector) { return matches(hostEl, selector.selector); });\r\n    // sort selectors by specifity\r\n    return sortSelectors(activeSelectors);\r\n}\r\nfunction getScopesForElement(hostTemplateMap, node) {\r\n    var scopes = [];\r\n    while (node) {\r\n        var scope = hostTemplateMap.get(node);\r\n        if (scope) {\r\n            scopes.push(scope);\r\n        }\r\n        node = node.parentElement;\r\n    }\r\n    return scopes;\r\n}\r\nfunction getSelectorsForScopes(scopes) {\r\n    var selectors = [];\r\n    scopes.forEach(function (scope) {\r\n        selectors.push.apply(selectors, scope.selectors);\r\n    });\r\n    return selectors;\r\n}\r\nfunction sortSelectors(selectors) {\r\n    selectors.sort(function (a, b) {\r\n        if (a.specificity === b.specificity) {\r\n            return a.nu - b.nu;\r\n        }\r\n        return a.specificity - b.specificity;\r\n    });\r\n    return selectors;\r\n}\r\nfunction matches(el, selector) {\r\n    return selector === ':root' || selector === 'html' || el.matches(selector);\r\n}\r\nfunction parseCSS(original) {\r\n    var ast = parse(original);\r\n    var template = compileTemplate(original);\r\n    var selectors = getSelectors(ast);\r\n    return {\r\n        original: original,\r\n        template: template,\r\n        selectors: selectors,\r\n        usesCssVars: template.length > 1\r\n    };\r\n}\r\nfunction addGlobalStyle(globalScopes, styleEl) {\r\n    var css = parseCSS(styleEl.innerHTML);\r\n    css.styleEl = styleEl;\r\n    globalScopes.push(css);\r\n}\r\nfunction updateGlobalScopes(scopes) {\r\n    var selectors = getSelectorsForScopes(scopes);\r\n    var props = resolveValues(selectors);\r\n    scopes.forEach(function (scope) {\r\n        if (scope.usesCssVars) {\r\n            scope.styleEl.innerHTML = executeTemplate(scope.template, props);\r\n        }\r\n    });\r\n}\r\nfunction reScope(scope, scopeId) {\r\n    var template = scope.template.map(function (segment) {\r\n        return (typeof segment === 'string')\r\n            ? replaceScope(segment, scope.scopeId, scopeId)\r\n            : segment;\r\n    });\r\n    var selectors = scope.selectors.map(function (sel) {\r\n        return Object.assign({}, sel, { selector: replaceScope(sel.selector, scope.scopeId, scopeId) });\r\n    });\r\n    return Object.assign({}, scope, { template: template,\r\n        selectors: selectors,\r\n        scopeId: scopeId });\r\n}\r\nfunction replaceScope(original, oldScopeId, newScopeId) {\r\n    original = replaceAll(original, \"\\\\.\" + oldScopeId, \".\" + newScopeId);\r\n    return original;\r\n}\r\nfunction replaceAll(input, find, replace) {\r\n    return input.replace(new RegExp(find, 'g'), replace);\r\n}\r\nfunction loadDocument(doc, globalScopes) {\r\n    loadDocumentStyles(doc, globalScopes);\r\n    return loadDocumentLinks(doc, globalScopes);\r\n}\r\nfunction loadDocumentLinks(doc, globalScopes) {\r\n    var promises = [];\r\n    var linkElms = doc.querySelectorAll('link[rel=\"stylesheet\"][href]');\r\n    for (var i = 0; i < linkElms.length; i++) {\r\n        promises.push(addGlobalLink(doc, globalScopes, linkElms[i]));\r\n    }\r\n    return Promise.all(promises);\r\n}\r\nfunction loadDocumentStyles(doc, globalScopes) {\r\n    var styleElms = doc.querySelectorAll('style:not([data-styles])');\r\n    for (var i = 0; i < styleElms.length; i++) {\r\n        addGlobalStyle(globalScopes, styleElms[i]);\r\n    }\r\n}\r\nfunction addGlobalLink(doc, globalScopes, linkElm) {\r\n    var url = linkElm.href;\r\n    return fetch(url).then(function (rsp) { return rsp.text(); }).then(function (text) {\r\n        if (hasCssVariables(text) && linkElm.parentNode) {\r\n            if (hasRelativeUrls(text)) {\r\n                text = fixRelativeUrls(text, url);\r\n            }\r\n            var styleEl = doc.createElement('style');\r\n            styleEl.setAttribute('data-styles', '');\r\n            styleEl.innerHTML = text;\r\n            addGlobalStyle(globalScopes, styleEl);\r\n            linkElm.parentNode.insertBefore(styleEl, linkElm);\r\n            linkElm.remove();\r\n        }\r\n    }).catch(function (err) {\r\n        console.error(err);\r\n    });\r\n}\r\n// This regexp tries to determine when a variable is declared, for example:\r\n//\r\n// .my-el { --highlight-color: green; }\r\n//\r\n// but we don't want to trigger when a classname uses \"--\" or a pseudo-class is\r\n// used. We assume that the only characters that can preceed a variable\r\n// declaration are \"{\", from an opening block, \";\" from a preceeding rule, or a\r\n// space. This prevents the regexp from matching a word in a selector, since\r\n// they would need to start with a \".\" or \"#\". (We assume element names don't\r\n// start with \"--\").\r\nvar CSS_VARIABLE_REGEXP = /[\\s;{]--[-a-zA-Z0-9]+\\s*:/m;\r\nfunction hasCssVariables(css) {\r\n    return css.indexOf('var(') > -1 || CSS_VARIABLE_REGEXP.test(css);\r\n}\r\n// This regexp find all url() usages with relative urls\r\nvar CSS_URL_REGEXP = /url[\\s]*\\([\\s]*['\"]?(?![http|/])([^\\'\\\"\\)]*)[\\s]*['\"]?\\)[\\s]*/gim;\r\nfunction hasRelativeUrls(css) {\r\n    CSS_URL_REGEXP.lastIndex = 0;\r\n    return CSS_URL_REGEXP.test(css);\r\n}\r\nfunction fixRelativeUrls(css, originalUrl) {\r\n    // get the basepath from the original import url\r\n    var basePath = originalUrl.replace(/[^/]*$/, '');\r\n    // replace the relative url, with the new relative url\r\n    return css.replace(CSS_URL_REGEXP, function (fullMatch, url) {\r\n        // rhe new relative path is the base path + uri\r\n        // TODO: normalize relative URL\r\n        var relativeUrl = basePath + url;\r\n        return fullMatch.replace(url, relativeUrl);\r\n    });\r\n}\r\nvar CustomStyle = /** @class */ (function () {\r\n    function CustomStyle(win, doc) {\r\n        this.win = win;\r\n        this.doc = doc;\r\n        this.count = 0;\r\n        this.hostStyleMap = new WeakMap();\r\n        this.hostScopeMap = new WeakMap();\r\n        this.globalScopes = [];\r\n        this.scopesMap = new Map();\r\n    }\r\n    CustomStyle.prototype.initShim = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.win.requestAnimationFrame(function () {\r\n                loadDocument(_this.doc, _this.globalScopes).then(function () { return resolve(); });\r\n            });\r\n        });\r\n    };\r\n    CustomStyle.prototype.addLink = function (linkEl) {\r\n        var _this = this;\r\n        return addGlobalLink(this.doc, this.globalScopes, linkEl).then(function () {\r\n            _this.updateGlobal();\r\n        });\r\n    };\r\n    CustomStyle.prototype.addGlobalStyle = function (styleEl) {\r\n        addGlobalStyle(this.globalScopes, styleEl);\r\n        this.updateGlobal();\r\n    };\r\n    CustomStyle.prototype.createHostStyle = function (hostEl, cssScopeId, cssText, isScoped) {\r\n        if (this.hostScopeMap.has(hostEl)) {\r\n            throw new Error('host style already created');\r\n        }\r\n        var baseScope = this.registerHostTemplate(cssText, cssScopeId, isScoped);\r\n        var styleEl = this.doc.createElement('style');\r\n        if (!baseScope.usesCssVars) {\r\n            // This component does not use (read) css variables\r\n            styleEl.innerHTML = cssText;\r\n        }\r\n        else if (isScoped) {\r\n            // This component is dynamic: uses css var and is scoped\r\n            styleEl['s-sc'] = cssScopeId = baseScope.scopeId + \"-\" + this.count;\r\n            styleEl.innerHTML = '/*needs update*/';\r\n            this.hostStyleMap.set(hostEl, styleEl);\r\n            this.hostScopeMap.set(hostEl, reScope(baseScope, cssScopeId));\r\n            this.count++;\r\n        }\r\n        else {\r\n            // This component uses css vars, but it's no-encapsulation (global static)\r\n            baseScope.styleEl = styleEl;\r\n            if (!baseScope.usesCssVars) {\r\n                styleEl.innerHTML = executeTemplate(baseScope.template, {});\r\n            }\r\n            this.globalScopes.push(baseScope);\r\n            this.updateGlobal();\r\n            this.hostScopeMap.set(hostEl, baseScope);\r\n        }\r\n        return styleEl;\r\n    };\r\n    CustomStyle.prototype.removeHost = function (hostEl) {\r\n        var css = this.hostStyleMap.get(hostEl);\r\n        if (css) {\r\n            css.remove();\r\n        }\r\n        this.hostStyleMap.delete(hostEl);\r\n        this.hostScopeMap.delete(hostEl);\r\n    };\r\n    CustomStyle.prototype.updateHost = function (hostEl) {\r\n        var scope = this.hostScopeMap.get(hostEl);\r\n        if (scope && scope.usesCssVars && scope.isScoped) {\r\n            var styleEl = this.hostStyleMap.get(hostEl);\r\n            if (styleEl) {\r\n                var selectors = getActiveSelectors(hostEl, this.hostScopeMap, this.globalScopes);\r\n                var props = resolveValues(selectors);\r\n                styleEl.innerHTML = executeTemplate(scope.template, props);\r\n            }\r\n        }\r\n    };\r\n    CustomStyle.prototype.updateGlobal = function () {\r\n        updateGlobalScopes(this.globalScopes);\r\n    };\r\n    CustomStyle.prototype.registerHostTemplate = function (cssText, scopeId, isScoped) {\r\n        var scope = this.scopesMap.get(scopeId);\r\n        if (!scope) {\r\n            scope = parseCSS(cssText);\r\n            scope.scopeId = scopeId;\r\n            scope.isScoped = isScoped;\r\n            this.scopesMap.set(scopeId, scope);\r\n        }\r\n        return scope;\r\n    };\r\n    return CustomStyle;\r\n}());\r\nvar win = window;\r\nfunction needsShim() {\r\n    return !(win.CSS && win.CSS.supports && win.CSS.supports('color', 'var(--c)'));\r\n}\r\nif (!win.__stencil_cssshim && needsShim()) {\r\n    win.__stencil_cssshim = new CustomStyle(win, document);\r\n}\r\n"],"sourceRoot":""}