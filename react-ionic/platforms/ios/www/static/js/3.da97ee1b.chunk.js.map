{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/index-69c37885.js"],"names":["CSS_VALUE_REGEX","TRANSFORM_PROPS","win","window","raf","requestAnimationFrame","bind","f","Date","now","Animator","this","_hasDur","_hasTweenEffect","_isAsync","_isReverse","_destroyed","hasChildren","isPlaying","hasCompleted","prototype","addElement","el","length","i","_addEl","nodeType","_elements","push","add","childAnimation","parent","_childAnimations","getDuration","opts","undefined","duration","_duration","isRoot","milliseconds","getEasing","_reversedEasingName","_easingName","easing","name","easingReverse","from","prop","val","_addProp","to","clearProperyAfterTransition","fx","afterClearStyles","trans","fromTo","fromVal","toVal","_getProp","_fxProperties","find","effectName","state","fxProp","shouldTrans","wc","fxState","num","effectUnit","indexOf","r","match","parseFloat","isNaN","beforeAddClass","className","_beforeAddClasses","beforeRemoveClass","_beforeRemoveClasses","beforeStyles","styles","_beforeStyles","beforeClearStyles","propertyNames","_i","propertyNames_1","beforeAddRead","domReadFn","_readCallbacks","beforeAddWrite","domWriteFn","_writeCallbacks","afterAddClass","_afterAddClasses","afterRemoveClass","_afterRemoveClasses","afterStyles","_afterStyles","propertyNames_2","play","_this","_hasDuration","_clearAsync","_playInit","_playDomInspect","playAsync","Promise","resolve","onFinish","oneTimeCallback","clearExistingCallbacks","playSync","children","children_1","_progress","_willChange","_beforeAnimation","dur","_asyncEnd","_playProgress","_playToStep","children_2","_setTrans","_setAfterStyles","_didFinish","stepValue","children_3","shouldComplete","self","_unregisterTrnsEnd","callback","unRegTrans","passive","unregister","onTransitionEnd","ev","target","addEventListener","removeEventListener","transitionEnd","_transEl","_playEnd","_didFinishAll","_timerId","setTimeout","children_4","children_5","_hasDomReads","children_6","stop","clearTimeout","elements","effects","j","finalTransform","fromNum","toNum","tweenEffect","style","setProperty","forcedLinearEasing","durString","elements_1","transitionDuration","transitionTimingFunction","_fireBeforeReadFunc","_fireBeforeWriteFunc","_setBeforeStyles","children_7","addClasses","removeClasses","_a","elements_2","elementClassList","classList","_b","addClasses_1","c","_c","removeClasses_1","remove","_d","_e","Object","entries","_f","key","value","children_8","readFunctions","readFunctions_1","children_9","writeFunctions","writeFunctions_1","elements_3","beforeAddClasses","beforeAddClasses_1","beforeRemoveClasses","beforeRemoveClasses_1","keys","propName","removeProperty","afterAddClasses","afterAddClasses_1","afterRemoveClasses","afterRemoveClasses_1","_g","_h","_j","addWillChange","willChange","effects_1","propWC","join","elements_4","progressStart","_progressStart","children_10","progressStep","Math","min","max","children_11","progressEnd","currentStepValue","diff","abs","_progressEnd","isAsync","children_12","_onFinishCallbacks","_onFinishOneTimeCallbacks","finishAsyncAnimations","finishNoDurationAnimations","children_13","reverse","shouldReverse","children_14","destroy","children_15","children_16","targetEl","create","animationBuilder","baseEl"],"mappings":"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","file":"static/js/3.da97ee1b.chunk.js","sourcesContent":["var transitionEnd = function (el, callback) {\r\n    var unRegTrans;\r\n    var opts = { passive: true };\r\n    var unregister = function () {\r\n        if (unRegTrans) {\r\n            unRegTrans();\r\n        }\r\n    };\r\n    var onTransitionEnd = function (ev) {\r\n        if (el === ev.target) {\r\n            unregister();\r\n            callback(ev);\r\n        }\r\n    };\r\n    if (el) {\r\n        el.addEventListener('webkitTransitionEnd', onTransitionEnd, opts);\r\n        el.addEventListener('transitionend', onTransitionEnd, opts);\r\n        unRegTrans = function () {\r\n            el.removeEventListener('webkitTransitionEnd', onTransitionEnd, opts);\r\n            el.removeEventListener('transitionend', onTransitionEnd, opts);\r\n        };\r\n    }\r\n    return unregister;\r\n};\r\nvar CSS_VALUE_REGEX = /(^-?\\d*\\.?\\d*)(.*)/;\r\nvar DURATION_MIN = 32;\r\nvar TRANSITION_END_FALLBACK_PADDING_MS = 400;\r\nvar TRANSFORM_PROPS = {\r\n    'translateX': 1,\r\n    'translateY': 1,\r\n    'translateZ': 1,\r\n    'scale': 1,\r\n    'scaleX': 1,\r\n    'scaleY': 1,\r\n    'scaleZ': 1,\r\n    'rotate': 1,\r\n    'rotateX': 1,\r\n    'rotateY': 1,\r\n    'rotateZ': 1,\r\n    'skewX': 1,\r\n    'skewY': 1,\r\n    'perspective': 1\r\n};\r\nvar win = typeof window !== 'undefined' ? window : {};\r\nvar raf = win.requestAnimationFrame\r\n    ? win.requestAnimationFrame.bind(win)\r\n    : function (f) { return f(Date.now()); };\r\nvar Animator = /** @class */ (function () {\r\n    function Animator() {\r\n        this._hasDur = false;\r\n        this._hasTweenEffect = false;\r\n        this._isAsync = false;\r\n        this._isReverse = false;\r\n        this._destroyed = false;\r\n        this.hasChildren = false;\r\n        this.isPlaying = false;\r\n        this.hasCompleted = false;\r\n    }\r\n    Animator.prototype.addElement = function (el) {\r\n        if (el != null) {\r\n            if (el.length > 0) {\r\n                for (var i = 0; i < el.length; i++) {\r\n                    this._addEl(el[i]);\r\n                }\r\n            }\r\n            else {\r\n                this._addEl(el);\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * NO DOM\r\n     */\r\n    Animator.prototype._addEl = function (el) {\r\n        if (el.nodeType === 1) {\r\n            (this._elements = this._elements || []).push(el);\r\n        }\r\n    };\r\n    /**\r\n     * Add a child animation to this animation.\r\n     */\r\n    Animator.prototype.add = function (childAnimation) {\r\n        childAnimation.parent = this;\r\n        this.hasChildren = true;\r\n        (this._childAnimations = this._childAnimations || []).push(childAnimation);\r\n        return this;\r\n    };\r\n    /**\r\n     * Get the duration of this animation. If this animation does\r\n     * not have a duration, then it'll get the duration from its parent.\r\n     */\r\n    Animator.prototype.getDuration = function (opts) {\r\n        if (opts && opts.duration !== undefined) {\r\n            return opts.duration;\r\n        }\r\n        else if (this._duration !== undefined) {\r\n            return this._duration;\r\n        }\r\n        else if (this.parent) {\r\n            return this.parent.getDuration();\r\n        }\r\n        return 0;\r\n    };\r\n    /**\r\n     * Returns if the animation is a root one.\r\n     */\r\n    Animator.prototype.isRoot = function () {\r\n        return !this.parent;\r\n    };\r\n    /**\r\n     * Set the duration for this animation.\r\n     */\r\n    Animator.prototype.duration = function (milliseconds) {\r\n        this._duration = milliseconds;\r\n        return this;\r\n    };\r\n    /**\r\n     * Get the easing of this animation. If this animation does\r\n     * not have an easing, then it'll get the easing from its parent.\r\n     */\r\n    Animator.prototype.getEasing = function () {\r\n        if (this._isReverse && this._reversedEasingName !== undefined) {\r\n            return this._reversedEasingName;\r\n        }\r\n        return this._easingName !== undefined ? this._easingName : (this.parent && this.parent.getEasing()) || null;\r\n    };\r\n    /**\r\n     * Set the easing for this animation.\r\n     */\r\n    Animator.prototype.easing = function (name) {\r\n        this._easingName = name;\r\n        return this;\r\n    };\r\n    /**\r\n     * Set the easing for this reversed animation.\r\n     */\r\n    Animator.prototype.easingReverse = function (name) {\r\n        this._reversedEasingName = name;\r\n        return this;\r\n    };\r\n    /**\r\n     * Add the \"from\" value for a specific property.\r\n     */\r\n    Animator.prototype.from = function (prop, val) {\r\n        this._addProp('from', prop, val);\r\n        return this;\r\n    };\r\n    /**\r\n     * Add the \"to\" value for a specific property.\r\n     */\r\n    Animator.prototype.to = function (prop, val, clearProperyAfterTransition) {\r\n        if (clearProperyAfterTransition === void 0) { clearProperyAfterTransition = false; }\r\n        var fx = this._addProp('to', prop, val);\r\n        if (clearProperyAfterTransition) {\r\n            // if this effect is a transform then clear the transform effect\r\n            // otherwise just clear the actual property\r\n            this.afterClearStyles(fx.trans ? ['transform', '-webkit-transform'] : [prop]);\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Shortcut to add both the \"from\" and \"to\" for the same property.\r\n     */\r\n    Animator.prototype.fromTo = function (prop, fromVal, toVal, clearProperyAfterTransition) {\r\n        return this.from(prop, fromVal).to(prop, toVal, clearProperyAfterTransition);\r\n    };\r\n    /**\r\n     * NO DOM\r\n     */\r\n    Animator.prototype._getProp = function (name) {\r\n        if (this._fxProperties) {\r\n            return this._fxProperties.find(function (prop) { return prop.effectName === name; });\r\n        }\r\n        return undefined;\r\n    };\r\n    Animator.prototype._addProp = function (state, prop, val) {\r\n        var fxProp = this._getProp(prop);\r\n        if (!fxProp) {\r\n            // first time we've see this EffectProperty\r\n            var shouldTrans = (TRANSFORM_PROPS[prop] === 1);\r\n            fxProp = {\r\n                effectName: prop,\r\n                trans: shouldTrans,\r\n                // add the will-change property for transforms or opacity\r\n                wc: (shouldTrans ? 'transform' : prop)\r\n            };\r\n            (this._fxProperties = this._fxProperties || []).push(fxProp);\r\n        }\r\n        // add from/to EffectState to the EffectProperty\r\n        var fxState = {\r\n            val: val,\r\n            num: 0,\r\n            effectUnit: '',\r\n        };\r\n        fxProp[state] = fxState;\r\n        if (typeof val === 'string' && val.indexOf(' ') < 0) {\r\n            var r = val.match(CSS_VALUE_REGEX);\r\n            if (r) {\r\n                var num = parseFloat(r[1]);\r\n                if (!isNaN(num)) {\r\n                    fxState.num = num;\r\n                }\r\n                fxState.effectUnit = (r[0] !== r[2] ? r[2] : '');\r\n            }\r\n        }\r\n        else if (typeof val === 'number') {\r\n            fxState.num = val;\r\n        }\r\n        return fxProp;\r\n    };\r\n    /**\r\n     * Add CSS class to this animation's elements\r\n     * before the animation begins.\r\n     */\r\n    Animator.prototype.beforeAddClass = function (className) {\r\n        (this._beforeAddClasses = this._beforeAddClasses || []).push(className);\r\n        return this;\r\n    };\r\n    /**\r\n     * Remove CSS class from this animation's elements\r\n     * before the animation begins.\r\n     */\r\n    Animator.prototype.beforeRemoveClass = function (className) {\r\n        (this._beforeRemoveClasses = this._beforeRemoveClasses || []).push(className);\r\n        return this;\r\n    };\r\n    /**\r\n     * Set CSS inline styles to this animation's elements\r\n     * before the animation begins.\r\n     */\r\n    Animator.prototype.beforeStyles = function (styles) {\r\n        this._beforeStyles = styles;\r\n        return this;\r\n    };\r\n    /**\r\n     * Clear CSS inline styles from this animation's elements\r\n     * before the animation begins.\r\n     */\r\n    Animator.prototype.beforeClearStyles = function (propertyNames) {\r\n        this._beforeStyles = this._beforeStyles || {};\r\n        for (var _i = 0, propertyNames_1 = propertyNames; _i < propertyNames_1.length; _i++) {\r\n            var prop = propertyNames_1[_i];\r\n            this._beforeStyles[prop] = '';\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Add a function which contains DOM reads, which will run\r\n     * before the animation begins.\r\n     */\r\n    Animator.prototype.beforeAddRead = function (domReadFn) {\r\n        (this._readCallbacks = this._readCallbacks || []).push(domReadFn);\r\n        return this;\r\n    };\r\n    /**\r\n     * Add a function which contains DOM writes, which will run\r\n     * before the animation begins.\r\n     */\r\n    Animator.prototype.beforeAddWrite = function (domWriteFn) {\r\n        (this._writeCallbacks = this._writeCallbacks || []).push(domWriteFn);\r\n        return this;\r\n    };\r\n    /**\r\n     * Add CSS class to this animation's elements\r\n     * after the animation finishes.\r\n     */\r\n    Animator.prototype.afterAddClass = function (className) {\r\n        (this._afterAddClasses = this._afterAddClasses || []).push(className);\r\n        return this;\r\n    };\r\n    /**\r\n     * Remove CSS class from this animation's elements\r\n     * after the animation finishes.\r\n     */\r\n    Animator.prototype.afterRemoveClass = function (className) {\r\n        (this._afterRemoveClasses = this._afterRemoveClasses || []).push(className);\r\n        return this;\r\n    };\r\n    /**\r\n     * Set CSS inline styles to this animation's elements\r\n     * after the animation finishes.\r\n     */\r\n    Animator.prototype.afterStyles = function (styles) {\r\n        this._afterStyles = styles;\r\n        return this;\r\n    };\r\n    /**\r\n     * Clear CSS inline styles from this animation's elements\r\n     * after the animation finishes.\r\n     */\r\n    Animator.prototype.afterClearStyles = function (propertyNames) {\r\n        this._afterStyles = this._afterStyles || {};\r\n        for (var _i = 0, propertyNames_2 = propertyNames; _i < propertyNames_2.length; _i++) {\r\n            var prop = propertyNames_2[_i];\r\n            this._afterStyles[prop] = '';\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Play the animation.\r\n     */\r\n    Animator.prototype.play = function (opts) {\r\n        var _this = this;\r\n        // If the animation was already invalidated (it did finish), do nothing\r\n        if (this._destroyed) {\r\n            return;\r\n        }\r\n        // this is the top level animation and is in full control\r\n        // of when the async play() should actually kick off\r\n        // if there is no duration then it'll set the TO property immediately\r\n        // if there is a duration, then it'll stage all animations at the\r\n        // FROM property and transition duration, wait a few frames, then\r\n        // kick off the animation by setting the TO property for each animation\r\n        this._isAsync = this._hasDuration(opts);\r\n        // ensure all past transition end events have been cleared\r\n        this._clearAsync();\r\n        // recursively kicks off the correct progress step for each child animation\r\n        // ******** DOM WRITE ****************\r\n        this._playInit(opts);\r\n        // doubling up RAFs since this animation was probably triggered\r\n        // from an input event, and just having one RAF would have this code\r\n        // run within the same frame as the triggering input event, and the\r\n        // input event probably already did way too much work for one frame\r\n        raf(function () {\r\n            raf(function () {\r\n                _this._playDomInspect(opts);\r\n            });\r\n        });\r\n    };\r\n    Animator.prototype.playAsync = function (opts) {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.onFinish(resolve, { oneTimeCallback: true, clearExistingCallbacks: true });\r\n            _this.play(opts);\r\n            return _this;\r\n        });\r\n    };\r\n    Animator.prototype.playSync = function () {\r\n        // If the animation was already invalidated (it did finish), do nothing\r\n        if (!this._destroyed) {\r\n            var opts = { duration: 0 };\r\n            this._isAsync = false;\r\n            this._clearAsync();\r\n            this._playInit(opts);\r\n            this._playDomInspect(opts);\r\n        }\r\n    };\r\n    /**\r\n     * DOM WRITE\r\n     * RECURSION\r\n     */\r\n    Animator.prototype._playInit = function (opts) {\r\n        // always default that an animation does not tween\r\n        // a tween requires that an Animation class has an element\r\n        // and that it has at least one FROM/TO effect\r\n        // and that the FROM/TO effect can tween numeric values\r\n        this._hasTweenEffect = false;\r\n        this.isPlaying = true;\r\n        this.hasCompleted = false;\r\n        this._hasDur = (this.getDuration(opts) > DURATION_MIN);\r\n        var children = this._childAnimations;\r\n        if (children) {\r\n            for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\r\n                var child = children_1[_i];\r\n                // ******** DOM WRITE ****************\r\n                child._playInit(opts);\r\n            }\r\n        }\r\n        if (this._hasDur) {\r\n            // if there is a duration then we want to start at step 0\r\n            // ******** DOM WRITE ****************\r\n            this._progress(0);\r\n            // add the will-change properties\r\n            // ******** DOM WRITE ****************\r\n            this._willChange(true);\r\n        }\r\n    };\r\n    /**\r\n     * DOM WRITE\r\n     * NO RECURSION\r\n     * ROOT ANIMATION\r\n     */\r\n    Animator.prototype._playDomInspect = function (opts) {\r\n        var _this = this;\r\n        // fire off all the \"before\" function that have DOM READS in them\r\n        // elements will be in the DOM, however visibily hidden\r\n        // so we can read their dimensions if need be\r\n        // ******** DOM READ ****************\r\n        // ******** DOM WRITE ****************\r\n        this._beforeAnimation();\r\n        // for the root animation only\r\n        // set the async TRANSITION END event\r\n        // and run onFinishes when the transition ends\r\n        var dur = this.getDuration(opts);\r\n        if (this._isAsync) {\r\n            this._asyncEnd(dur, true);\r\n        }\r\n        // ******** DOM WRITE ****************\r\n        this._playProgress(opts);\r\n        if (this._isAsync && !this._destroyed) {\r\n            // this animation has a duration so we need another RAF\r\n            // for the CSS TRANSITION properties to kick in\r\n            raf(function () {\r\n                _this._playToStep(1);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * DOM WRITE\r\n     * RECURSION\r\n     */\r\n    Animator.prototype._playProgress = function (opts) {\r\n        var children = this._childAnimations;\r\n        if (children) {\r\n            for (var _i = 0, children_2 = children; _i < children_2.length; _i++) {\r\n                var child = children_2[_i];\r\n                // ******** DOM WRITE ****************\r\n                child._playProgress(opts);\r\n            }\r\n        }\r\n        if (this._hasDur) {\r\n            // set the CSS TRANSITION duration/easing\r\n            // ******** DOM WRITE ****************\r\n            this._setTrans(this.getDuration(opts), false);\r\n        }\r\n        else {\r\n            // this animation does not have a duration, so it should not animate\r\n            // just go straight to the TO properties and call it done\r\n            // ******** DOM WRITE ****************\r\n            this._progress(1);\r\n            // since there was no animation, immediately run the after\r\n            // ******** DOM WRITE ****************\r\n            this._setAfterStyles();\r\n            // this animation has no duration, so it has finished\r\n            // other animations could still be running\r\n            this._didFinish(true);\r\n        }\r\n    };\r\n    /**\r\n     * DOM WRITE\r\n     * RECURSION\r\n     */\r\n    Animator.prototype._playToStep = function (stepValue) {\r\n        if (!this._destroyed) {\r\n            var children = this._childAnimations;\r\n            if (children) {\r\n                for (var _i = 0, children_3 = children; _i < children_3.length; _i++) {\r\n                    var child = children_3[_i];\r\n                    // ******** DOM WRITE ****************\r\n                    child._playToStep(stepValue);\r\n                }\r\n            }\r\n            if (this._hasDur) {\r\n                // browser had some time to render everything in place\r\n                // and the transition duration/easing is set\r\n                // now set the TO properties which will trigger the transition to begin\r\n                // ******** DOM WRITE ****************\r\n                this._progress(stepValue);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * DOM WRITE\r\n     * NO RECURSION\r\n     * ROOT ANIMATION\r\n     */\r\n    Animator.prototype._asyncEnd = function (dur, shouldComplete) {\r\n        var self = this;\r\n        var onTransitionEnd = function () {\r\n            // congrats! a successful transition completed!\r\n            // ensure transition end events and timeouts have been cleared\r\n            self._clearAsync();\r\n            // ******** DOM WRITE ****************\r\n            self._playEnd();\r\n            // transition finished\r\n            self._didFinishAll(shouldComplete, true, false);\r\n        };\r\n        var onTransitionFallback = function () {\r\n            // oh noz! the transition end event didn't fire in time!\r\n            // instead the fallback timer when first\r\n            // if all goes well this fallback should never fire\r\n            // clear the other async end events from firing\r\n            self._timerId = undefined;\r\n            self._clearAsync();\r\n            // set the after styles\r\n            // ******** DOM WRITE ****************\r\n            self._playEnd(shouldComplete ? 1 : 0);\r\n            // transition finished\r\n            self._didFinishAll(shouldComplete, true, false);\r\n        };\r\n        // set the TRANSITION END event on one of the transition elements\r\n        self._unregisterTrnsEnd = transitionEnd(self._transEl(), onTransitionEnd);\r\n        // set a fallback timeout if the transition end event never fires, or is too slow\r\n        // transition end fallback: (animation duration + XXms)\r\n        self._timerId = setTimeout(onTransitionFallback, (dur + TRANSITION_END_FALLBACK_PADDING_MS));\r\n    };\r\n    /**\r\n     * DOM WRITE\r\n     * RECURSION\r\n     */\r\n    Animator.prototype._playEnd = function (stepValue) {\r\n        var children = this._childAnimations;\r\n        if (children) {\r\n            for (var _i = 0, children_4 = children; _i < children_4.length; _i++) {\r\n                var child = children_4[_i];\r\n                // ******** DOM WRITE ****************\r\n                child._playEnd(stepValue);\r\n            }\r\n        }\r\n        if (this._hasDur) {\r\n            if (stepValue !== undefined) {\r\n                // too late to have a smooth animation, just finish it\r\n                // ******** DOM WRITE ****************\r\n                this._setTrans(0, true);\r\n                // ensure the ending progress step gets rendered\r\n                // ******** DOM WRITE ****************\r\n                this._progress(stepValue);\r\n            }\r\n            // set the after styles\r\n            // ******** DOM WRITE ****************\r\n            this._setAfterStyles();\r\n            // remove the will-change properties\r\n            // ******** DOM WRITE ****************\r\n            this._willChange(false);\r\n        }\r\n    };\r\n    /**\r\n     * NO DOM\r\n     * RECURSION\r\n     */\r\n    Animator.prototype._hasDuration = function (opts) {\r\n        if (this.getDuration(opts) > DURATION_MIN) {\r\n            return true;\r\n        }\r\n        var children = this._childAnimations;\r\n        if (children) {\r\n            for (var _i = 0, children_5 = children; _i < children_5.length; _i++) {\r\n                var child = children_5[_i];\r\n                if (child._hasDuration(opts)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * NO DOM\r\n     * RECURSION\r\n     */\r\n    Animator.prototype._hasDomReads = function () {\r\n        if (this._readCallbacks && this._readCallbacks.length > 0) {\r\n            return true;\r\n        }\r\n        var children = this._childAnimations;\r\n        if (children) {\r\n            for (var _i = 0, children_6 = children; _i < children_6.length; _i++) {\r\n                var child = children_6[_i];\r\n                if (child._hasDomReads()) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Immediately stop at the end of the animation.\r\n     */\r\n    Animator.prototype.stop = function (stepValue) {\r\n        if (stepValue === void 0) { stepValue = 1; }\r\n        // ensure all past transition end events have been cleared\r\n        this._clearAsync();\r\n        this._hasDur = true;\r\n        this._playEnd(stepValue);\r\n    };\r\n    /**\r\n     * NO DOM\r\n     * NO RECURSION\r\n     */\r\n    Animator.prototype._clearAsync = function () {\r\n        if (this._unregisterTrnsEnd) {\r\n            this._unregisterTrnsEnd();\r\n        }\r\n        if (this._timerId) {\r\n            clearTimeout(this._timerId);\r\n        }\r\n        this._timerId = this._unregisterTrnsEnd = undefined;\r\n    };\r\n    /**\r\n     * DOM WRITE\r\n     * NO RECURSION\r\n     */\r\n    Animator.prototype._progress = function (stepValue) {\r\n        // bread 'n butter\r\n        var val;\r\n        var elements = this._elements;\r\n        var effects = this._fxProperties;\r\n        if (!elements || elements.length === 0 || !effects || this._destroyed) {\r\n            return;\r\n        }\r\n        // flip the number if we're going in reverse\r\n        if (this._isReverse) {\r\n            stepValue = 1 - stepValue;\r\n        }\r\n        var i = 0;\r\n        var j = 0;\r\n        var finalTransform = '';\r\n        var fx;\r\n        for (i = 0; i < effects.length; i++) {\r\n            fx = effects[i];\r\n            if (fx.from && fx.to) {\r\n                var fromNum = fx.from.num;\r\n                var toNum = fx.to.num;\r\n                var tweenEffect = (fromNum !== toNum);\r\n                if (tweenEffect) {\r\n                    this._hasTweenEffect = true;\r\n                }\r\n                if (stepValue === 0) {\r\n                    // FROM\r\n                    val = fx.from.val;\r\n                }\r\n                else if (stepValue === 1) {\r\n                    // TO\r\n                    val = fx.to.val;\r\n                }\r\n                else if (tweenEffect) {\r\n                    // EVERYTHING IN BETWEEN\r\n                    var valNum = (((toNum - fromNum) * stepValue) + fromNum);\r\n                    var unit = fx.to.effectUnit;\r\n                    val = valNum + unit;\r\n                }\r\n                if (val !== null) {\r\n                    var prop = fx.effectName;\r\n                    if (fx.trans) {\r\n                        finalTransform += prop + '(' + val + ') ';\r\n                    }\r\n                    else {\r\n                        for (j = 0; j < elements.length; j++) {\r\n                            // ******** DOM WRITE ****************\r\n                            elements[j].style.setProperty(prop, val);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // place all transforms on the same property\r\n        if (finalTransform.length > 0) {\r\n            if (!this._isReverse && stepValue !== 1 || this._isReverse && stepValue !== 0) {\r\n                finalTransform += 'translateZ(0px)';\r\n            }\r\n            for (i = 0; i < elements.length; i++) {\r\n                // ******** DOM WRITE ****************\r\n                elements[i].style.setProperty('transform', finalTransform);\r\n                elements[i].style.setProperty('-webkit-transform', finalTransform);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * DOM WRITE\r\n     * NO RECURSION\r\n     */\r\n    Animator.prototype._setTrans = function (dur, forcedLinearEasing) {\r\n        // Transition is not enabled if there are not effects\r\n        var elements = this._elements;\r\n        if (!elements || elements.length === 0 || !this._fxProperties) {\r\n            return;\r\n        }\r\n        // set the TRANSITION properties inline on the element\r\n        var easing = (forcedLinearEasing ? 'linear' : this.getEasing());\r\n        var durString = dur + 'ms';\r\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\r\n            var style = elements_1[_i].style;\r\n            if (dur > 0) {\r\n                // ******** DOM WRITE ****************\r\n                style.transitionDuration = durString;\r\n                // each animation can have a different easing\r\n                if (easing !== null) {\r\n                    // ******** DOM WRITE ****************\r\n                    style.transitionTimingFunction = easing;\r\n                }\r\n            }\r\n            else {\r\n                style.transitionDuration = '0';\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * DOM READ\r\n     * DOM WRITE\r\n     * RECURSION\r\n     */\r\n    Animator.prototype._beforeAnimation = function () {\r\n        // fire off all the \"before\" function that have DOM READS in them\r\n        // elements will be in the DOM, however visibily hidden\r\n        // so we can read their dimensions if need be\r\n        // ******** DOM READ ****************\r\n        this._fireBeforeReadFunc();\r\n        // ******** DOM READS ABOVE / DOM WRITES BELOW ****************\r\n        // fire off all the \"before\" function that have DOM WRITES in them\r\n        // ******** DOM WRITE ****************\r\n        this._fireBeforeWriteFunc();\r\n        // stage all of the before css classes and inline styles\r\n        // ******** DOM WRITE ****************\r\n        this._setBeforeStyles();\r\n    };\r\n    /**\r\n     * DOM WRITE\r\n     * RECURSION\r\n     */\r\n    Animator.prototype._setBeforeStyles = function () {\r\n        var children = this._childAnimations;\r\n        if (children) {\r\n            for (var _i = 0, children_7 = children; _i < children_7.length; _i++) {\r\n                var child = children_7[_i];\r\n                child._setBeforeStyles();\r\n            }\r\n        }\r\n        var elements = this._elements;\r\n        // before the animations have started\r\n        // only set before styles if animation is not reversed\r\n        if (!elements || elements.length === 0 || this._isReverse) {\r\n            return;\r\n        }\r\n        var addClasses = this._beforeAddClasses;\r\n        var removeClasses = this._beforeRemoveClasses;\r\n        for (var _a = 0, elements_2 = elements; _a < elements_2.length; _a++) {\r\n            var el = elements_2[_a];\r\n            var elementClassList = el.classList;\r\n            // css classes to add before the animation\r\n            if (addClasses) {\r\n                for (var _b = 0, addClasses_1 = addClasses; _b < addClasses_1.length; _b++) {\r\n                    var c = addClasses_1[_b];\r\n                    // ******** DOM WRITE ****************\r\n                    elementClassList.add(c);\r\n                }\r\n            }\r\n            // css classes to remove before the animation\r\n            if (removeClasses) {\r\n                for (var _c = 0, removeClasses_1 = removeClasses; _c < removeClasses_1.length; _c++) {\r\n                    var c = removeClasses_1[_c];\r\n                    // ******** DOM WRITE ****************\r\n                    elementClassList.remove(c);\r\n                }\r\n            }\r\n            // inline styles to add before the animation\r\n            if (this._beforeStyles) {\r\n                for (var _d = 0, _e = Object.entries(this._beforeStyles); _d < _e.length; _d++) {\r\n                    var _f = _e[_d], key = _f[0], value = _f[1];\r\n                    // ******** DOM WRITE ****************\r\n                    el.style.setProperty(key, value);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * DOM READ\r\n     * RECURSION\r\n     */\r\n    Animator.prototype._fireBeforeReadFunc = function () {\r\n        var children = this._childAnimations;\r\n        if (children) {\r\n            for (var _i = 0, children_8 = children; _i < children_8.length; _i++) {\r\n                var child = children_8[_i];\r\n                // ******** DOM READ ****************\r\n                child._fireBeforeReadFunc();\r\n            }\r\n        }\r\n        var readFunctions = this._readCallbacks;\r\n        if (readFunctions) {\r\n            for (var _a = 0, readFunctions_1 = readFunctions; _a < readFunctions_1.length; _a++) {\r\n                var callback = readFunctions_1[_a];\r\n                // ******** DOM READ ****************\r\n                callback();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * DOM WRITE\r\n     * RECURSION\r\n     */\r\n    Animator.prototype._fireBeforeWriteFunc = function () {\r\n        var children = this._childAnimations;\r\n        if (children) {\r\n            for (var _i = 0, children_9 = children; _i < children_9.length; _i++) {\r\n                var child = children_9[_i];\r\n                // ******** DOM WRITE ****************\r\n                child._fireBeforeWriteFunc();\r\n            }\r\n        }\r\n        var writeFunctions = this._writeCallbacks;\r\n        if (writeFunctions) {\r\n            for (var _a = 0, writeFunctions_1 = writeFunctions; _a < writeFunctions_1.length; _a++) {\r\n                var callback = writeFunctions_1[_a];\r\n                // ******** DOM WRITE ****************\r\n                callback();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * DOM WRITE\r\n     */\r\n    Animator.prototype._setAfterStyles = function () {\r\n        var elements = this._elements;\r\n        if (!elements) {\r\n            return;\r\n        }\r\n        for (var _i = 0, elements_3 = elements; _i < elements_3.length; _i++) {\r\n            var el = elements_3[_i];\r\n            var elementClassList = el.classList;\r\n            // remove the transition duration/easing\r\n            // ******** DOM WRITE ****************\r\n            el.style.transitionDuration = el.style.transitionTimingFunction = '';\r\n            if (this._isReverse) {\r\n                // finished in reverse direction\r\n                // css classes that were added before the animation should be removed\r\n                var beforeAddClasses = this._beforeAddClasses;\r\n                if (beforeAddClasses) {\r\n                    for (var _a = 0, beforeAddClasses_1 = beforeAddClasses; _a < beforeAddClasses_1.length; _a++) {\r\n                        var c = beforeAddClasses_1[_a];\r\n                        elementClassList.remove(c);\r\n                    }\r\n                }\r\n                // css classes that were removed before the animation should be added\r\n                var beforeRemoveClasses = this._beforeRemoveClasses;\r\n                if (beforeRemoveClasses) {\r\n                    for (var _b = 0, beforeRemoveClasses_1 = beforeRemoveClasses; _b < beforeRemoveClasses_1.length; _b++) {\r\n                        var c = beforeRemoveClasses_1[_b];\r\n                        elementClassList.add(c);\r\n                    }\r\n                }\r\n                // inline styles that were added before the animation should be removed\r\n                var beforeStyles = this._beforeStyles;\r\n                if (beforeStyles) {\r\n                    for (var _c = 0, _d = Object.keys(beforeStyles); _c < _d.length; _c++) {\r\n                        var propName = _d[_c];\r\n                        // ******** DOM WRITE ****************\r\n                        el.style.removeProperty(propName);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // finished in forward direction\r\n                // css classes to add after the animation\r\n                var afterAddClasses = this._afterAddClasses;\r\n                if (afterAddClasses) {\r\n                    for (var _e = 0, afterAddClasses_1 = afterAddClasses; _e < afterAddClasses_1.length; _e++) {\r\n                        var c = afterAddClasses_1[_e];\r\n                        // ******** DOM WRITE ****************\r\n                        elementClassList.add(c);\r\n                    }\r\n                }\r\n                // css classes to remove after the animation\r\n                var afterRemoveClasses = this._afterRemoveClasses;\r\n                if (afterRemoveClasses) {\r\n                    for (var _f = 0, afterRemoveClasses_1 = afterRemoveClasses; _f < afterRemoveClasses_1.length; _f++) {\r\n                        var c = afterRemoveClasses_1[_f];\r\n                        // ******** DOM WRITE ****************\r\n                        elementClassList.remove(c);\r\n                    }\r\n                }\r\n                // inline styles to add after the animation\r\n                var afterStyles = this._afterStyles;\r\n                if (afterStyles) {\r\n                    for (var _g = 0, _h = Object.entries(afterStyles); _g < _h.length; _g++) {\r\n                        var _j = _h[_g], key = _j[0], value = _j[1];\r\n                        el.style.setProperty(key, value);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * DOM WRITE\r\n     * NO RECURSION\r\n     */\r\n    Animator.prototype._willChange = function (addWillChange) {\r\n        var wc;\r\n        var effects = this._fxProperties;\r\n        var willChange;\r\n        if (addWillChange && effects) {\r\n            wc = [];\r\n            for (var _i = 0, effects_1 = effects; _i < effects_1.length; _i++) {\r\n                var effect = effects_1[_i];\r\n                var propWC = effect.wc;\r\n                if (propWC === 'webkitTransform') {\r\n                    wc.push('transform', '-webkit-transform');\r\n                }\r\n                else if (propWC !== undefined) {\r\n                    wc.push(propWC);\r\n                }\r\n            }\r\n            willChange = wc.join(',');\r\n        }\r\n        else {\r\n            willChange = '';\r\n        }\r\n        var elements = this._elements;\r\n        if (elements) {\r\n            for (var _a = 0, elements_4 = elements; _a < elements_4.length; _a++) {\r\n                var el = elements_4[_a];\r\n                // ******** DOM WRITE ****************\r\n                el.style.setProperty('will-change', willChange);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Start the animation with a user controlled progress.\r\n     */\r\n    Animator.prototype.progressStart = function () {\r\n        // ensure all past transition end events have been cleared\r\n        this._clearAsync();\r\n        // ******** DOM READ/WRITE ****************\r\n        this._beforeAnimation();\r\n        // ******** DOM WRITE ****************\r\n        this._progressStart();\r\n    };\r\n    /**\r\n     * DOM WRITE\r\n     * RECURSION\r\n     */\r\n    Animator.prototype._progressStart = function () {\r\n        var children = this._childAnimations;\r\n        if (children) {\r\n            for (var _i = 0, children_10 = children; _i < children_10.length; _i++) {\r\n                var child = children_10[_i];\r\n                // ******** DOM WRITE ****************\r\n                child._progressStart();\r\n            }\r\n        }\r\n        // force no duration, linear easing\r\n        // ******** DOM WRITE ****************\r\n        this._setTrans(0, true);\r\n        // ******** DOM WRITE ****************\r\n        this._willChange(true);\r\n    };\r\n    /**\r\n     * Set the progress step for this animation.\r\n     * progressStep() is not debounced, so it should not be called faster than 60FPS.\r\n     */\r\n    Animator.prototype.progressStep = function (stepValue) {\r\n        // only update if the last update was more than 16ms ago\r\n        stepValue = Math.min(1, Math.max(0, stepValue));\r\n        var children = this._childAnimations;\r\n        if (children) {\r\n            for (var _i = 0, children_11 = children; _i < children_11.length; _i++) {\r\n                var child = children_11[_i];\r\n                // ******** DOM WRITE ****************\r\n                child.progressStep(stepValue);\r\n            }\r\n        }\r\n        // ******** DOM WRITE ****************\r\n        this._progress(stepValue);\r\n    };\r\n    /**\r\n     * End the progress animation.\r\n     */\r\n    Animator.prototype.progressEnd = function (shouldComplete, currentStepValue, dur) {\r\n        var _this = this;\r\n        if (dur === void 0) { dur = -1; }\r\n        if (this._isReverse) {\r\n            // if the animation is going in reverse then\r\n            // flip the step value: 0 becomes 1, 1 becomes 0\r\n            currentStepValue = 1 - currentStepValue;\r\n        }\r\n        var stepValue = shouldComplete ? 1 : 0;\r\n        var diff = Math.abs(currentStepValue - stepValue);\r\n        if (dur < 0) {\r\n            dur = this._duration || 0;\r\n        }\r\n        else if (diff < 0.05) {\r\n            dur = 0;\r\n        }\r\n        this._isAsync = (dur > 30);\r\n        this._progressEnd(shouldComplete, stepValue, dur, this._isAsync);\r\n        if (this._isAsync) {\r\n            // for the root animation only\r\n            // set the async TRANSITION END event\r\n            // and run onFinishes when the transition ends\r\n            // ******** DOM WRITE ****************\r\n            this._asyncEnd(dur, shouldComplete);\r\n            // this animation has a duration so we need another RAF\r\n            // for the CSS TRANSITION properties to kick in\r\n            if (!this._destroyed) {\r\n                raf(function () {\r\n                    _this._playToStep(stepValue);\r\n                });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * DOM WRITE\r\n     * RECURSION\r\n     */\r\n    Animator.prototype._progressEnd = function (shouldComplete, stepValue, dur, isAsync) {\r\n        var children = this._childAnimations;\r\n        if (children) {\r\n            for (var _i = 0, children_12 = children; _i < children_12.length; _i++) {\r\n                var child = children_12[_i];\r\n                // ******** DOM WRITE ****************\r\n                child._progressEnd(shouldComplete, stepValue, dur, isAsync);\r\n            }\r\n        }\r\n        if (!isAsync) {\r\n            // stop immediately\r\n            // set all the animations to their final position\r\n            // ******** DOM WRITE ****************\r\n            this._progress(stepValue);\r\n            this._willChange(false);\r\n            this._setAfterStyles();\r\n            this._didFinish(shouldComplete);\r\n        }\r\n        else {\r\n            // animate it back to it's ending position\r\n            this.isPlaying = true;\r\n            this.hasCompleted = false;\r\n            this._hasDur = true;\r\n            // ******** DOM WRITE ****************\r\n            this._willChange(true);\r\n            this._setTrans(dur, false);\r\n        }\r\n    };\r\n    /**\r\n     * Add a callback to fire when the animation has finished.\r\n     */\r\n    Animator.prototype.onFinish = function (callback, opts) {\r\n        if (opts && opts.clearExistingCallbacks) {\r\n            this._onFinishCallbacks = this._onFinishOneTimeCallbacks = undefined;\r\n        }\r\n        if (opts && opts.oneTimeCallback) {\r\n            this._onFinishOneTimeCallbacks = this._onFinishOneTimeCallbacks || [];\r\n            this._onFinishOneTimeCallbacks.push(callback);\r\n        }\r\n        else {\r\n            this._onFinishCallbacks = this._onFinishCallbacks || [];\r\n            this._onFinishCallbacks.push(callback);\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * NO DOM\r\n     * RECURSION\r\n     */\r\n    Animator.prototype._didFinishAll = function (hasCompleted, finishAsyncAnimations, finishNoDurationAnimations) {\r\n        var children = this._childAnimations;\r\n        if (children) {\r\n            for (var _i = 0, children_13 = children; _i < children_13.length; _i++) {\r\n                var child = children_13[_i];\r\n                child._didFinishAll(hasCompleted, finishAsyncAnimations, finishNoDurationAnimations);\r\n            }\r\n        }\r\n        if (finishAsyncAnimations && this._isAsync || finishNoDurationAnimations && !this._isAsync) {\r\n            this._didFinish(hasCompleted);\r\n        }\r\n    };\r\n    /**\r\n     * NO RECURSION\r\n     */\r\n    Animator.prototype._didFinish = function (hasCompleted) {\r\n        this.isPlaying = false;\r\n        this.hasCompleted = hasCompleted;\r\n        if (this._onFinishCallbacks) {\r\n            // run all finish callbacks\r\n            for (var _i = 0, _a = this._onFinishCallbacks; _i < _a.length; _i++) {\r\n                var callback = _a[_i];\r\n                callback(this);\r\n            }\r\n        }\r\n        if (this._onFinishOneTimeCallbacks) {\r\n            // run all \"onetime\" finish callbacks\r\n            for (var _b = 0, _c = this._onFinishOneTimeCallbacks; _b < _c.length; _b++) {\r\n                var callback = _c[_b];\r\n                callback(this);\r\n            }\r\n            this._onFinishOneTimeCallbacks.length = 0;\r\n        }\r\n    };\r\n    /**\r\n     * Reverse the animation.\r\n     */\r\n    Animator.prototype.reverse = function (shouldReverse) {\r\n        if (shouldReverse === void 0) { shouldReverse = true; }\r\n        var children = this._childAnimations;\r\n        if (children) {\r\n            for (var _i = 0, children_14 = children; _i < children_14.length; _i++) {\r\n                var child = children_14[_i];\r\n                child.reverse(shouldReverse);\r\n            }\r\n        }\r\n        this._isReverse = !!shouldReverse;\r\n        return this;\r\n    };\r\n    /**\r\n     * Recursively destroy this animation and all child animations.\r\n     */\r\n    Animator.prototype.destroy = function () {\r\n        this._didFinish(false);\r\n        this._destroyed = true;\r\n        var children = this._childAnimations;\r\n        if (children) {\r\n            for (var _i = 0, children_15 = children; _i < children_15.length; _i++) {\r\n                var child = children_15[_i];\r\n                child.destroy();\r\n            }\r\n        }\r\n        this._clearAsync();\r\n        if (this._elements) {\r\n            this._elements.length = 0;\r\n        }\r\n        if (this._readCallbacks) {\r\n            this._readCallbacks.length = 0;\r\n        }\r\n        if (this._writeCallbacks) {\r\n            this._writeCallbacks.length = 0;\r\n        }\r\n        this.parent = undefined;\r\n        if (this._childAnimations) {\r\n            this._childAnimations.length = 0;\r\n        }\r\n        if (this._onFinishCallbacks) {\r\n            this._onFinishCallbacks.length = 0;\r\n        }\r\n        if (this._onFinishOneTimeCallbacks) {\r\n            this._onFinishOneTimeCallbacks.length = 0;\r\n        }\r\n    };\r\n    /**\r\n     * NO DOM\r\n     */\r\n    Animator.prototype._transEl = function () {\r\n        // get the lowest level element that has an Animator\r\n        var children = this._childAnimations;\r\n        if (children) {\r\n            for (var _i = 0, children_16 = children; _i < children_16.length; _i++) {\r\n                var child = children_16[_i];\r\n                var targetEl = child._transEl();\r\n                if (targetEl) {\r\n                    return targetEl;\r\n                }\r\n            }\r\n        }\r\n        return (this._hasTweenEffect &&\r\n            this._hasDur &&\r\n            this._elements !== undefined &&\r\n            this._elements.length > 0 ?\r\n            this._elements[0] : null);\r\n    };\r\n    return Animator;\r\n}());\r\nvar create = function (animationBuilder, baseEl, opts) {\r\n    if (animationBuilder) {\r\n        return animationBuilder(Animator, baseEl, opts);\r\n    }\r\n    return Promise.resolve(new Animator());\r\n};\r\nexport { create };\r\n"],"sourceRoot":""}