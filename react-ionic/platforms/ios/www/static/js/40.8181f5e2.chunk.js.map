{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/ion-infinite-scroll_2-md.entry.js","../node_modules/@ionic/core/dist/esm-es5/index-3476b023.js"],"names":["InfiniteScroll","class_1","hostRef","_this","this","registerInstance","thrPx","thrPc","didFire","isBusy","isLoading","threshold","disabled","position","onScroll","scrollEl","canStart","infiniteHeight","el","offsetHeight","scrollTop","scrollHeight","height","ionInfinite","emit","createEvent","prototype","thresholdChanged","val","lastIndexOf","parseFloat","disabledChanged","enableScrollEvents","connectedCallback","__awaiter","contentEl","_a","__generator","_b","label","closest","getScrollElement","console","error","sent","writeTask","clientHeight","disconnectedCallback","undefined","complete","prev_1","requestAnimationFrame","readTask","newScrollTop","shouldListen","addEventListener","removeEventListener","render","mode","getIonMode","h","Host","class","Object","defineProperty","get","getElement","enumerable","configurable","InfiniteScrollContent","componentDidLoad","loadingSpinner","config","name","loadingText","innerHTML","sanitizeDOMString","untrustedString","documentFragment_1","document","createDocumentFragment","workingDiv","createElement","appendChild","blockedTags","forEach","blockedTag","getElementsToRemove","querySelectorAll","elementIndex","length","element","parentNode","removeChild","childElements","getElementChildren","childIndex","sanitizeElement","dfChildren","fragmentDiv","getInnerDiv","querySelector","err","nodeType","i","attributes","attribute","item","attributeName","allowedAttributes","includes","toLowerCase","attributeValue","value","removeAttribute","children","childNodes"],"mappings":"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","file":"static/js/40.8181f5e2.chunk.js","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\r\nimport { r as registerInstance, c as createEvent, w as writeTask, f as readTask, d as getIonMode, h, e as getElement, H as Host } from './core-ca0488fc.js';\r\nimport { b as config } from './config-3c7f3790.js';\r\nimport { s as sanitizeDOMString } from './index-3476b023.js';\r\nvar InfiniteScroll = /** @class */ (function () {\r\n    function class_1(hostRef) {\r\n        var _this = this;\r\n        registerInstance(this, hostRef);\r\n        this.thrPx = 0;\r\n        this.thrPc = 0;\r\n        this.didFire = false;\r\n        this.isBusy = false;\r\n        this.isLoading = false;\r\n        /**\r\n         * The threshold distance from the bottom\r\n         * of the content to call the `infinite` output event when scrolled.\r\n         * The threshold value can be either a percent, or\r\n         * in pixels. For example, use the value of `10%` for the `infinite`\r\n         * output event to get called when the user has scrolled 10%\r\n         * from the bottom of the page. Use the value `100px` when the\r\n         * scroll is within 100 pixels from the bottom of the page.\r\n         */\r\n        this.threshold = '15%';\r\n        /**\r\n         * If `true`, the infinite scroll will be hidden and scroll event listeners\r\n         * will be removed.\r\n         *\r\n         * Set this to true to disable the infinite scroll from actively\r\n         * trying to receive new data while scrolling. This is useful\r\n         * when it is known that there is no more data that can be added, and\r\n         * the infinite scroll is no longer needed.\r\n         */\r\n        this.disabled = false;\r\n        /**\r\n         * The position of the infinite scroll element.\r\n         * The value can be either `top` or `bottom`.\r\n         */\r\n        this.position = 'bottom';\r\n        this.onScroll = function () {\r\n            var scrollEl = _this.scrollEl;\r\n            if (!scrollEl || !_this.canStart()) {\r\n                return 1;\r\n            }\r\n            var infiniteHeight = _this.el.offsetHeight;\r\n            if (infiniteHeight === 0) {\r\n                // if there is no height of this element then do nothing\r\n                return 2;\r\n            }\r\n            var scrollTop = scrollEl.scrollTop;\r\n            var scrollHeight = scrollEl.scrollHeight;\r\n            var height = scrollEl.offsetHeight;\r\n            var threshold = _this.thrPc !== 0 ? (height * _this.thrPc) : _this.thrPx;\r\n            var distanceFromInfinite = (_this.position === 'bottom')\r\n                ? scrollHeight - infiniteHeight - scrollTop - threshold - height\r\n                : scrollTop - infiniteHeight - threshold;\r\n            if (distanceFromInfinite < 0) {\r\n                if (!_this.didFire) {\r\n                    _this.isLoading = true;\r\n                    _this.didFire = true;\r\n                    _this.ionInfinite.emit();\r\n                    return 3;\r\n                }\r\n            }\r\n            else {\r\n                _this.didFire = false;\r\n            }\r\n            return 4;\r\n        };\r\n        this.ionInfinite = createEvent(this, \"ionInfinite\", 7);\r\n    }\r\n    class_1.prototype.thresholdChanged = function () {\r\n        var val = this.threshold;\r\n        if (val.lastIndexOf('%') > -1) {\r\n            this.thrPx = 0;\r\n            this.thrPc = (parseFloat(val) / 100);\r\n        }\r\n        else {\r\n            this.thrPx = parseFloat(val);\r\n            this.thrPc = 0;\r\n        }\r\n    };\r\n    class_1.prototype.disabledChanged = function () {\r\n        var disabled = this.disabled;\r\n        if (disabled) {\r\n            this.isLoading = false;\r\n            this.isBusy = false;\r\n        }\r\n        this.enableScrollEvents(!disabled);\r\n    };\r\n    class_1.prototype.connectedCallback = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var contentEl, _a;\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        contentEl = this.el.closest('ion-content');\r\n                        if (!contentEl) {\r\n                            console.error('<ion-infinite-scroll> must be used inside an <ion-content>');\r\n                            return [2 /*return*/];\r\n                        }\r\n                        _a = this;\r\n                        return [4 /*yield*/, contentEl.getScrollElement()];\r\n                    case 1:\r\n                        _a.scrollEl = _b.sent();\r\n                        this.thresholdChanged();\r\n                        this.disabledChanged();\r\n                        if (this.position === 'top') {\r\n                            writeTask(function () {\r\n                                if (_this.scrollEl) {\r\n                                    _this.scrollEl.scrollTop = _this.scrollEl.scrollHeight - _this.scrollEl.clientHeight;\r\n                                }\r\n                            });\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    class_1.prototype.disconnectedCallback = function () {\r\n        this.enableScrollEvents(false);\r\n        this.scrollEl = undefined;\r\n    };\r\n    /**\r\n     * Call `complete()` within the `ionInfinite` output event handler when\r\n     * your async operation has completed. For example, the `loading`\r\n     * state is while the app is performing an asynchronous operation,\r\n     * such as receiving more data from an AJAX request to add more items\r\n     * to a data list. Once the data has been received and UI updated, you\r\n     * then call this method to signify that the loading has completed.\r\n     * This method will change the infinite scroll's state from `loading`\r\n     * to `enabled`.\r\n     */\r\n    class_1.prototype.complete = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var scrollEl, prev_1;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                scrollEl = this.scrollEl;\r\n                if (!this.isLoading || !scrollEl) {\r\n                    return [2 /*return*/];\r\n                }\r\n                this.isLoading = false;\r\n                if (this.position === 'top') {\r\n                    /**\r\n                     * New content is being added at the top, but the scrollTop position stays the same,\r\n                     * which causes a scroll jump visually. This algorithm makes sure to prevent this.\r\n                     * (Frame 1)\r\n                     *    - complete() is called, but the UI hasn't had time to update yet.\r\n                     *    - Save the current content dimensions.\r\n                     *    - Wait for the next frame using _dom.read, so the UI will be updated.\r\n                     * (Frame 2)\r\n                     *    - Read the new content dimensions.\r\n                     *    - Calculate the height difference and the new scroll position.\r\n                     *    - Delay the scroll position change until other possible dom reads are done using _dom.write to be performant.\r\n                     * (Still frame 2, if I'm correct)\r\n                     *    - Change the scroll position (= visually maintain the scroll position).\r\n                     *    - Change the state to re-enable the InfiniteScroll.\r\n                     *    - This should be after changing the scroll position, or it could\r\n                     *    cause the InfiniteScroll to be triggered again immediately.\r\n                     * (Frame 3)\r\n                     *    Done.\r\n                     */\r\n                    this.isBusy = true;\r\n                    prev_1 = scrollEl.scrollHeight - scrollEl.scrollTop;\r\n                    // ******** DOM READ ****************\r\n                    requestAnimationFrame(function () {\r\n                        readTask(function () {\r\n                            // UI has updated, save the new content dimensions\r\n                            var scrollHeight = scrollEl.scrollHeight;\r\n                            // New content was added on top, so the scroll position should be changed immediately to prevent it from jumping around\r\n                            var newScrollTop = scrollHeight - prev_1;\r\n                            // ******** DOM WRITE ****************\r\n                            requestAnimationFrame(function () {\r\n                                writeTask(function () {\r\n                                    scrollEl.scrollTop = newScrollTop;\r\n                                    _this.isBusy = false;\r\n                                });\r\n                            });\r\n                        });\r\n                    });\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    class_1.prototype.canStart = function () {\r\n        return (!this.disabled &&\r\n            !this.isBusy &&\r\n            !!this.scrollEl &&\r\n            !this.isLoading);\r\n    };\r\n    class_1.prototype.enableScrollEvents = function (shouldListen) {\r\n        if (this.scrollEl) {\r\n            if (shouldListen) {\r\n                this.scrollEl.addEventListener('scroll', this.onScroll);\r\n            }\r\n            else {\r\n                this.scrollEl.removeEventListener('scroll', this.onScroll);\r\n            }\r\n        }\r\n    };\r\n    class_1.prototype.render = function () {\r\n        var _a;\r\n        var mode = getIonMode(this);\r\n        var disabled = this.disabled;\r\n        return (h(Host, { class: (_a = {},\r\n                _a[mode] = true,\r\n                _a['infinite-scroll-loading'] = this.isLoading,\r\n                _a['infinite-scroll-enabled'] = !disabled,\r\n                _a) }));\r\n    };\r\n    Object.defineProperty(class_1.prototype, \"el\", {\r\n        get: function () { return getElement(this); },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(class_1, \"watchers\", {\r\n        get: function () {\r\n            return {\r\n                \"threshold\": [\"thresholdChanged\"],\r\n                \"disabled\": [\"disabledChanged\"]\r\n            };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(class_1, \"style\", {\r\n        get: function () { return \"ion-infinite-scroll{display:none;width:100%}.infinite-scroll-enabled{display:block}\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return class_1;\r\n}());\r\nvar InfiniteScrollContent = /** @class */ (function () {\r\n    function InfiniteScrollContent(hostRef) {\r\n        registerInstance(this, hostRef);\r\n    }\r\n    InfiniteScrollContent.prototype.componentDidLoad = function () {\r\n        if (this.loadingSpinner === undefined) {\r\n            var mode = getIonMode(this);\r\n            this.loadingSpinner = config.get('infiniteLoadingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'crescent'));\r\n        }\r\n    };\r\n    InfiniteScrollContent.prototype.render = function () {\r\n        var _a;\r\n        var mode = getIonMode(this);\r\n        return (h(Host, { class: (_a = {},\r\n                _a[mode] = true,\r\n                // Used internally for styling\r\n                _a[\"infinite-scroll-content-\" + mode] = true,\r\n                _a) }, h(\"div\", { class: \"infinite-loading\" }, this.loadingSpinner && (h(\"div\", { class: \"infinite-loading-spinner\" }, h(\"ion-spinner\", { name: this.loadingSpinner }))), this.loadingText && (h(\"div\", { class: \"infinite-loading-text\", innerHTML: sanitizeDOMString(this.loadingText) })))));\r\n    };\r\n    Object.defineProperty(InfiniteScrollContent, \"style\", {\r\n        get: function () { return \"ion-infinite-scroll-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;min-height:84px;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.infinite-loading{margin-left:0;margin-right:0;margin-top:0;margin-bottom:32px;display:none;width:100%}.infinite-loading-text{margin-left:32px;margin-right:32px;margin-top:4px;margin-bottom:0}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.infinite-loading-text{margin-left:unset;margin-right:unset;-webkit-margin-start:32px;margin-inline-start:32px;-webkit-margin-end:32px;margin-inline-end:32px}}.infinite-scroll-loading ion-infinite-scroll-content>.infinite-loading{display:block}.infinite-scroll-content-md .infinite-loading-text{color:var(--ion-color-step-600,#666)}.infinite-scroll-content-md .infinite-loading-spinner .spinner-crescent circle,.infinite-scroll-content-md .infinite-loading-spinner .spinner-lines-md line,.infinite-scroll-content-md .infinite-loading-spinner .spinner-lines-small-md line{stroke:var(--ion-color-step-600,#666)}.infinite-scroll-content-md .infinite-loading-spinner .spinner-bubbles circle,.infinite-scroll-content-md .infinite-loading-spinner .spinner-circles circle,.infinite-scroll-content-md .infinite-loading-spinner .spinner-dots circle{fill:var(--ion-color-step-600,#666)}\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return InfiniteScrollContent;\r\n}());\r\nexport { InfiniteScroll as ion_infinite_scroll, InfiniteScrollContent as ion_infinite_scroll_content };\r\n","/**\r\n * Does a simple sanitization of all elements\r\n * in an untrusted string\r\n */\r\nvar sanitizeDOMString = function (untrustedString) {\r\n    try {\r\n        if (typeof untrustedString !== 'string' || untrustedString === '') {\r\n            return untrustedString;\r\n        }\r\n        /**\r\n         * Create a document fragment\r\n         * separate from the main DOM,\r\n         * create a div to do our work in\r\n         */\r\n        var documentFragment_1 = document.createDocumentFragment();\r\n        var workingDiv = document.createElement('div');\r\n        documentFragment_1.appendChild(workingDiv);\r\n        workingDiv.innerHTML = untrustedString;\r\n        /**\r\n         * Remove any elements\r\n         * that are blocked\r\n         */\r\n        blockedTags.forEach(function (blockedTag) {\r\n            var getElementsToRemove = documentFragment_1.querySelectorAll(blockedTag);\r\n            for (var elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\r\n                var element = getElementsToRemove[elementIndex];\r\n                if (element.parentNode) {\r\n                    element.parentNode.removeChild(element);\r\n                }\r\n                else {\r\n                    documentFragment_1.removeChild(element);\r\n                }\r\n                /**\r\n                 * We still need to sanitize\r\n                 * the children of this element\r\n                 * as they are left behind\r\n                 */\r\n                var childElements = getElementChildren(element);\r\n                /* tslint:disable-next-line */\r\n                for (var childIndex = 0; childIndex < childElements.length; childIndex++) {\r\n                    sanitizeElement(childElements[childIndex]);\r\n                }\r\n            }\r\n        });\r\n        /**\r\n         * Go through remaining elements and remove\r\n         * non-allowed attribs\r\n         */\r\n        // IE does not support .children on document fragments, only .childNodes\r\n        var dfChildren = getElementChildren(documentFragment_1);\r\n        /* tslint:disable-next-line */\r\n        for (var childIndex = 0; childIndex < dfChildren.length; childIndex++) {\r\n            sanitizeElement(dfChildren[childIndex]);\r\n        }\r\n        // Append document fragment to div\r\n        var fragmentDiv = document.createElement('div');\r\n        fragmentDiv.appendChild(documentFragment_1);\r\n        // First child is always the div we did our work in\r\n        var getInnerDiv = fragmentDiv.querySelector('div');\r\n        return (getInnerDiv !== null) ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\r\n    }\r\n    catch (err) {\r\n        console.error(err);\r\n        return '';\r\n    }\r\n};\r\n/**\r\n * Clean up current element based on allowed attributes\r\n * and then recursively dig down into any child elements to\r\n * clean those up as well\r\n */\r\nvar sanitizeElement = function (element) {\r\n    // IE uses childNodes, so ignore nodes that are not elements\r\n    if (element.nodeType && element.nodeType !== 1) {\r\n        return;\r\n    }\r\n    for (var i = element.attributes.length - 1; i >= 0; i--) {\r\n        var attribute = element.attributes.item(i);\r\n        var attributeName = attribute.name;\r\n        // remove non-allowed attribs\r\n        if (!allowedAttributes.includes(attributeName.toLowerCase())) {\r\n            element.removeAttribute(attributeName);\r\n            continue;\r\n        }\r\n        // clean up any allowed attribs\r\n        // that attempt to do any JS funny-business\r\n        var attributeValue = attribute.value;\r\n        /* tslint:disable-next-line */\r\n        if (attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) {\r\n            element.removeAttribute(attributeName);\r\n        }\r\n    }\r\n    /**\r\n     * Sanitize any nested children\r\n     */\r\n    var childElements = getElementChildren(element);\r\n    /* tslint:disable-next-line */\r\n    for (var i = 0; i < childElements.length; i++) {\r\n        sanitizeElement(childElements[i]);\r\n    }\r\n};\r\n/**\r\n * IE doesn't always support .children\r\n * so we revert to .childNodes instead\r\n */\r\nvar getElementChildren = function (el) {\r\n    return (el.children != null) ? el.children : el.childNodes;\r\n};\r\nvar allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\r\nvar blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\r\nexport { sanitizeDOMString as s };\r\n"],"sourceRoot":""}