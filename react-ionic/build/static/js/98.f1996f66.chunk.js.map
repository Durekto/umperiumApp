{"version":3,"sources":["../node_modules/ionicons/dist/esm/legacy/ion-icon.entry.js"],"names":["isValid","elm","nodeType","nodeName","toLowerCase","i","attributes","length","val","value","isStr","indexOf","childNodes","requests","Map","getSvgContent","url","req","get","fetch","then","rsp","status","text","Promise","resolve","svgContent","div","document","createElement","innerHTML","removeChild","svgElm","firstElementChild","setAttribute","validateContent","set","Icon","hostRef","registerInstance","this","mode","getIonMode","isVisible","lazy","prototype","connectedCallback","_this","waitUntilVisible","el","loadIcon","disconnectedCallback","io","disconnect","undefined","rootMargin","cb","window","IntersectionObserver","io_1","data","isIntersecting","observe","getUrl","ariaLabel","label","getName","name","icon","ios","md","replace","render","_a","_b","flipRtl","h","Host","role","class","Object","assign","createColorClasses","color","size","ownerDocument","dir","defineProperty","enumerable","configurable","getElement","ref","getMode","documentElement","getAttribute"],"mappings":"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","file":"static/js/98.f1996f66.chunk.js","sourcesContent":["import { r as registerInstance, c as getMode, h, H as Host, d as getElement } from './chunk-58252182.js';\r\nimport { i as isStr, g as getUrl, b as getName } from './chunk-2a882949.js';\r\nvar validateContent = function (svgContent) {\r\n    if (svgContent) {\r\n        var div = document.createElement('div');\r\n        div.innerHTML = svgContent;\r\n        // setup this way to ensure it works on our buddy IE\r\n        for (var i = div.childNodes.length - 1; i >= 0; i--) {\r\n            if (div.childNodes[i].nodeName.toLowerCase() !== 'svg') {\r\n                div.removeChild(div.childNodes[i]);\r\n            }\r\n        }\r\n        // must only have 1 root element\r\n        var svgElm = div.firstElementChild;\r\n        if (svgElm && svgElm.nodeName.toLowerCase() === 'svg') {\r\n            svgElm.setAttribute('class', 's-ion-icon');\r\n            // root element must be an svg\r\n            // lets double check we've got valid elements\r\n            // do not allow scripts\r\n            if (isValid(svgElm)) {\r\n                return div.innerHTML;\r\n            }\r\n        }\r\n    }\r\n    return '';\r\n};\r\nvar isValid = function (elm) {\r\n    if (elm.nodeType === 1) {\r\n        if (elm.nodeName.toLowerCase() === 'script') {\r\n            return false;\r\n        }\r\n        for (var i = 0; i < elm.attributes.length; i++) {\r\n            var val = elm.attributes[i].value;\r\n            if (isStr(val) && val.toLowerCase().indexOf('on') === 0) {\r\n                return false;\r\n            }\r\n        }\r\n        for (var i = 0; i < elm.childNodes.length; i++) {\r\n            if (!isValid(elm.childNodes[i])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n};\r\nvar requests = new Map();\r\nvar getSvgContent = function (url) {\r\n    // see if we already have a request for this url\r\n    var req = requests.get(url);\r\n    if (!req) {\r\n        // we don't already have a request\r\n        req = fetch(url).then(function (rsp) {\r\n            if (rsp.status <= 299) {\r\n                return rsp.text();\r\n            }\r\n            return Promise.resolve(null);\r\n        }).then(function (svgContent) { return validateContent(svgContent); });\r\n        // cache for the same requests\r\n        requests.set(url, req);\r\n    }\r\n    return req;\r\n};\r\n/**\r\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\r\n */\r\nvar Icon = /** @class */ (function () {\r\n    function Icon(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.mode = getIonMode(this);\r\n        this.isVisible = false;\r\n        /**\r\n         * If enabled, ion-icon will be loaded lazily when it's visible in the viewport.\r\n         * Default, `false`.\r\n         */\r\n        this.lazy = false;\r\n    }\r\n    Icon.prototype.connectedCallback = function () {\r\n        var _this = this;\r\n        // purposely do not return the promise here because loading\r\n        // the svg file should not hold up loading the app\r\n        // only load the svg if it's visible\r\n        this.waitUntilVisible(this.el, '50px', function () {\r\n            _this.isVisible = true;\r\n            _this.loadIcon();\r\n        });\r\n    };\r\n    Icon.prototype.disconnectedCallback = function () {\r\n        if (this.io) {\r\n            this.io.disconnect();\r\n            this.io = undefined;\r\n        }\r\n    };\r\n    Icon.prototype.waitUntilVisible = function (el, rootMargin, cb) {\r\n        var _this = this;\r\n        if (this.lazy && typeof window !== 'undefined' && window.IntersectionObserver) {\r\n            var io_1 = this.io = new window.IntersectionObserver(function (data) {\r\n                if (data[0].isIntersecting) {\r\n                    io_1.disconnect();\r\n                    _this.io = undefined;\r\n                    cb();\r\n                }\r\n            }, { rootMargin: rootMargin });\r\n            io_1.observe(el);\r\n        }\r\n        else {\r\n            // browser doesn't support IntersectionObserver\r\n            // so just fallback to always show it\r\n            cb();\r\n        }\r\n    };\r\n    Icon.prototype.loadIcon = function () {\r\n        var _this = this;\r\n        if (this.isVisible) {\r\n            var url = getUrl(this);\r\n            if (url) {\r\n                getSvgContent(url)\r\n                    .then(function (svgContent) { return _this.svgContent = svgContent; });\r\n            }\r\n        }\r\n        if (!this.ariaLabel) {\r\n            var label = getName(this.name, this.icon, this.mode, this.ios, this.md);\r\n            // user did not provide a label\r\n            // come up with the label based on the icon name\r\n            if (label) {\r\n                this.ariaLabel = label\r\n                    .replace('ios-', '')\r\n                    .replace('md-', '')\r\n                    .replace(/\\-/g, ' ');\r\n            }\r\n        }\r\n    };\r\n    Icon.prototype.render = function () {\r\n        var _a, _b;\r\n        var mode = this.mode || 'md';\r\n        var flipRtl = this.flipRtl || (this.ariaLabel && this.ariaLabel.indexOf('arrow') > -1 && this.flipRtl !== false);\r\n        return (h(Host, { role: \"img\", class: Object.assign((_a = {}, _a[mode] = true, _a), createColorClasses(this.color), (_b = {}, _b[\"icon-\" + this.size] = !!this.size, _b['flip-rtl'] = !!flipRtl && this.el.ownerDocument.dir === 'rtl', _b)) }, ((this.svgContent)\r\n            ? h(\"div\", { class: \"icon-inner\", innerHTML: this.svgContent })\r\n            : h(\"div\", { class: \"icon-inner\" }))));\r\n    };\r\n    Object.defineProperty(Icon, \"assetsDirs\", {\r\n        get: function () { return [\"svg\"]; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Icon.prototype, \"el\", {\r\n        get: function () { return getElement(this); },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Icon, \"watchers\", {\r\n        get: function () {\r\n            return {\r\n                \"name\": [\"loadIcon\"],\r\n                \"src\": [\"loadIcon\"],\r\n                \"icon\": [\"loadIcon\"]\r\n            };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Icon, \"style\", {\r\n        get: function () { return \":host{display:inline-block;width:1em;height:1em;contain:strict;fill:currentColor;-webkit-box-sizing:content-box!important;box-sizing:content-box!important}.icon-inner,svg{display:block;height:100%;width:100%}:host(.flip-rtl) .icon-inner{-webkit-transform:scaleX(-1);transform:scaleX(-1)}:host(.icon-small){font-size:18px!important}:host(.icon-large){font-size:32px!important}:host(.ion-color){color:var(--ion-color-base)!important}:host(.ion-color-primary){--ion-color-base:var(--ion-color-primary,#3880ff)}:host(.ion-color-secondary){--ion-color-base:var(--ion-color-secondary,#0cd1e8)}:host(.ion-color-tertiary){--ion-color-base:var(--ion-color-tertiary,#f4a942)}:host(.ion-color-success){--ion-color-base:var(--ion-color-success,#10dc60)}:host(.ion-color-warning){--ion-color-base:var(--ion-color-warning,#ffce00)}:host(.ion-color-danger){--ion-color-base:var(--ion-color-danger,#f14141)}:host(.ion-color-light){--ion-color-base:var(--ion-color-light,#f4f5f8)}:host(.ion-color-medium){--ion-color-base:var(--ion-color-medium,#989aa2)}:host(.ion-color-dark){--ion-color-base:var(--ion-color-dark,#222428)}\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Icon;\r\n}());\r\nvar getIonMode = function (ref) {\r\n    return getMode(ref) || document.documentElement.getAttribute('mode') || 'md';\r\n};\r\nvar createColorClasses = function (color) {\r\n    var _a;\r\n    return (color) ? (_a = {\r\n            'ion-color': true\r\n        },\r\n        _a[\"ion-color-\" + color] = true,\r\n        _a) : null;\r\n};\r\nexport { Icon as ion_icon };\r\n"],"sourceRoot":""}