{"version":3,"sources":["../node_modules/ionicons/dist/esm/legacy/shadow-css-984bac74-549b16dd.js"],"names":["scopeCss","cssText","scopeId","commentOriginalSelector","ShadowCss","shimCssText","this","strictStyling","prototype","hostScopeId","slotScopeId","commentsWithHash","match","_commentWithHashRe","input","replace","_commentRe","stripComments","orgSelectors","processCommentedSelector_1","rule","placeholder","length","comment","selector","push","processRules","startsWith","content","scopedCssText","_scopeCssText","concat","join","forEach","_a","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertColonSlotted","_convertShadowDOMSelectors","_scopeSelectors","trim","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","slotAttr","regExp","_cssColonSlottedRe","m","_i","arguments","compound","suffix","sel","_polyfillHostNoCombinator","_cssColonHostContextRe","_colonHostContextPartReplacer","partReplacer","parts","split","r","i","p","host","part","indexOf","_polyfillHost","_shadowDOMSelectorsRe","reduce","result","pattern","scopeSelector","hostSelector","slotSelector","_this","_scopeSelector","CssRule","strict","map","shallowPart","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","_makeScopeMatcher","test","RegExp","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","lastIndex","replaceBy_1","_polyfillHostNoCombinatorRe","_","before","colon","after","res","className","_scopeSelectorPart","scopedP","t","matches","safeContent","SafeSelector","scopedSelector","startIndex","sep","shouldScope","exec","separator","part_1","slice","index","substring","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","_colonSlottedRe","_polyfillSlotted","placeholders","keep","replaceBy","_content","pseudo","exp","_parenSuffix","_ruleRe","_curlyRe","ruleCallback","inputWithEscapedBlocks","inputParts","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","StringWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","contentPrefix","blocks"],"mappings":";mHAWA,SAASA,EAASC,EAASC,EAASC,GAEhC,OADS,IAAIC,GACHC,YAAYJ,EAASC,EAASA,EAAU,KAAMA,EAAU,KAAMC,GAb5E,0FAeA,IAAIC,EAA2B,WAC3B,SAASA,IACLE,KAAKC,eAAgB,EAyRzB,OAvRAH,EAAUI,UAAUH,YAAc,SAAUJ,EAASC,EAASO,EAAaC,EAAaP,QAChE,IAAhBM,IAA0BA,EAAc,SACxB,IAAhBC,IAA0BA,EAAc,SACZ,IAA5BP,IAAsCA,GAA0B,GACpE,IAAIQ,EAA2CV,EA6UtCW,MAAMC,IAAuB,GA5UtCZ,EAuUR,SAAuBa,GACnB,OAAOA,EAAMC,QAAQC,EAAY,IAxUnBC,CAAchB,GACxB,IAAIiB,EAAe,GACnB,GAAIf,EAAyB,CACzB,IAAIgB,EAA6B,SAAUC,GACvC,IAAIC,EAAc,UAAYH,EAAaI,OAAS,QAChDC,EAAU,OAASH,EAAKI,SAAW,KAGvC,OAFAN,EAAaO,KAAK,CAAEJ,YAAaA,EAAaE,QAASA,IACvDH,EAAKI,SAAWH,EAAcD,EAAKI,SAC5BJ,GAEXnB,EAAUyB,EAAazB,GAAS,SAAUmB,GACtC,MAAyB,MAArBA,EAAKI,SAAS,GACPL,EAA2BC,GAE7BA,EAAKI,SAASG,WAAW,WAAaP,EAAKI,SAASG,WAAW,cACpEP,EAAKI,SAASG,WAAW,UAAYP,EAAKI,SAASG,WAAW,cAC9DP,EAAKQ,QAAUF,EAAaN,EAAKQ,QAAST,GACnCC,GAEJA,KAGf,IAAIS,EAAgBvB,KAAKwB,cAAc7B,EAASC,EAASO,EAAaC,EAAaP,GAQnF,OAPAF,EAAU,CAAC4B,GAAeE,OAAOpB,GAAkBqB,KAAK,MACpD7B,GACAe,EAAae,SAAQ,SAAUC,GAC3B,IAAIb,EAAca,EAAGb,YAAaE,EAAUW,EAAGX,QAC/CtB,EAAUA,EAAQc,QAAQM,EAAaE,MAGxCtB,GAEXG,EAAUI,UAAUsB,cAAgB,SAAU7B,EAASC,EAASO,EAAaC,EAAaP,GAYtF,OAVAF,EAAUK,KAAK6B,6BAA6BlC,GAC5CA,EAAUK,KAAK8B,kBAAkBnC,GACjCA,EAAUK,KAAK+B,yBAAyBpC,GACxCA,EAAUK,KAAKgC,qBAAqBrC,EAASS,GAC7CT,EAAUK,KAAKiC,2BAA2BtC,GACtCC,IACAD,EAAUK,KAAKkC,gBAAgBvC,EAASC,EAASO,EAAaC,EAAaP,KAG/EF,GADAA,EAAUA,EAAQc,QAAQ,gCAAiC,IAAMN,IAC/CM,QAAQ,uBAAwB,SACnC0B,QASnBrC,EAAUI,UAAU4B,kBAAoB,SAAUnC,GAC9C,OAAOK,KAAKoC,kBAAkBzC,EAAS0C,EAAiBrC,KAAKsC,yBAKjExC,EAAUI,UAAU8B,qBAAuB,SAAUrC,EAAS4C,GAC1D,IAAIC,EAASC,EACb,OAAO9C,EAAQc,QAAQ+B,GAAQ,WAE3B,IADA,IAAIE,EAAI,GACCC,EAAK,EAAGA,EAAKC,UAAU5B,OAAQ2B,IACpCD,EAAEC,GAAMC,UAAUD,GAEtB,GAAID,EAAE,GAAI,CACN,IAAIG,EAAWH,EAAE,GAAGP,OAChBW,EAASJ,EAAE,GACXK,EAAM,IAAMR,EAAW,MAAQM,EAAWC,EAC9C,OAAOC,EAGP,OAAOC,EAA4BN,EAAE,OAmBjD5C,EAAUI,UAAU6B,yBAA2B,SAAUpC,GACrD,OAAOK,KAAKoC,kBAAkBzC,EAASsD,EAAwBjD,KAAKkD,gCAExEpD,EAAUI,UAAUkC,kBAAoB,SAAUzC,EAAS6C,EAAQW,GAE/D,OAAOxD,EAAQc,QAAQ+B,GAAQ,WAE3B,IADA,IAAIE,EAAI,GACCC,EAAK,EAAGA,EAAKC,UAAU5B,OAAQ2B,IACpCD,EAAEC,GAAMC,UAAUD,GAEtB,GAAID,EAAE,GAAI,CAGN,IAFA,IAAIU,EAAQV,EAAE,GAAGW,MAAM,KACnBC,EAAI,GACCC,EAAI,EAAGA,EAAIH,EAAMpC,OAAQuC,IAAK,CACnC,IAAIC,EAAIJ,EAAMG,GAAGpB,OACjB,IAAKqB,EACD,MACJF,EAAEnC,KAAKgC,EAAaH,EAA2BQ,EAAGd,EAAE,KAExD,OAAOY,EAAE5B,KAAK,KAGd,OAAOsB,EAA4BN,EAAE,OAIjD5C,EAAUI,UAAUgD,8BAAgC,SAAUO,EAAMC,EAAMZ,GACtE,OAAIY,EAAKC,QAAQC,IAAkB,EACxB5D,KAAKsC,uBAAuBmB,EAAMC,EAAMZ,GAGxCW,EAAOC,EAAOZ,EAAS,KAAOY,EAAO,IAAMD,EAAOX,GAGjEhD,EAAUI,UAAUoC,uBAAyB,SAAUmB,EAAMC,EAAMZ,GAC/D,OAAOW,EAAOC,EAAKjD,QAAQmD,EAAe,IAAMd,GAMpDhD,EAAUI,UAAU+B,2BAA6B,SAAUtC,GACvD,OAAOkE,EAAsBC,QAAO,SAAUC,EAAQC,GAAW,OAAOD,EAAOtD,QAAQuD,EAAS,OAASrE,IAG7GG,EAAUI,UAAUgC,gBAAkB,SAAUvC,EAASsE,EAAeC,EAAcC,EAActE,GAChG,IAAIuE,EAAQpE,KACZ,OAAOoB,EAAazB,GAAS,SAAUmB,GACnC,IAAII,EAAWJ,EAAKI,SAChBI,EAAUR,EAAKQ,QAUnB,MATyB,MAArBR,EAAKI,SAAS,GACdA,EACIkD,EAAMC,eAAevD,EAAKI,SAAU+C,EAAeC,EAAcC,EAAcC,EAAMnE,gBAEpFa,EAAKI,SAASG,WAAW,WAAaP,EAAKI,SAASG,WAAW,cACpEP,EAAKI,SAASG,WAAW,UAAYP,EAAKI,SAASG,WAAW,gBAC9DC,EAAU8C,EAAMlC,gBAAgBpB,EAAKQ,QAAS2C,EAAeC,EAAcC,EAActE,IAE7FqB,EAAWA,EAAST,QAAQ,UAAW,KAAK0B,OACrC,IAAImC,EAAQpD,EAAUI,OAGrCxB,EAAUI,UAAUmE,eAAiB,SAAUnD,EAAU+C,EAAeC,EAAcC,EAAcI,GAChG,IAAIH,EAAQpE,KACZ,OAAOkB,EAASmC,MAAM,KACjBmB,KAAI,SAAUC,GACf,OAAIN,GAAgBM,EAAYd,QAAQ,IAAMQ,IAAiB,EACpDM,EAAYtC,OAEnBiC,EAAMM,sBAAsBD,EAAaR,GAClCM,EACHH,EAAMO,0BAA0BF,EAAaR,EAAeC,GAAc/B,OAC1EiC,EAAMQ,oBAAoBH,EAAaR,EAAeC,GAAc/B,OAGjEsC,EAAYtC,UAGtBT,KAAK,OAEd5B,EAAUI,UAAUwE,sBAAwB,SAAUxD,EAAU+C,GAE5D,OADSjE,KAAK6E,kBAAkBZ,GACrBa,KAAK5D,IAEpBpB,EAAUI,UAAU2E,kBAAoB,SAAUZ,GAI9C,OADAA,EAAgBA,EAAcxD,QAFpB,MAEiC,OAAOA,QADxC,MACqD,OACxD,IAAIsE,OAAO,KAAOd,EAAgB,IAAMe,EAAmB,MAEtElF,EAAUI,UAAU0E,oBAAsB,SAAU1D,EAAU+C,EAAeC,GAEzE,OAAOlE,KAAKiF,0BAA0B/D,EAAU+C,EAAeC,IAGnEpE,EAAUI,UAAU+E,0BAA4B,SAAU/D,EAAU+C,EAAeC,GAG/E,GADAgB,EAAgBC,UAAY,EACxBD,EAAgBJ,KAAK5D,GAAW,CAChC,IAAIkE,EAAcpF,KAAKC,cAAgB,IAAMiE,EAAeD,EAC5D,OAAO/C,EACFT,QAAQ4E,GAA6B,SAAUC,EAAGpE,GACnD,OAAOA,EAAST,QAAQ,mBAAmB,SAAU6E,EAAGC,EAAQC,EAAOC,GACnE,OAAOF,EAASH,EAAcI,EAAQC,QAGzChF,QAAQyE,EAAiBE,EAAc,KAEhD,OAAOnB,EAAgB,IAAM/C,GAEjCpB,EAAUI,UAAUyE,0BAA4B,SAAUzD,EAAU+C,EAAeC,GAmD/E,IAlDA,IAkCIwB,EAlCAtB,EAAQpE,KASR2F,EAAY,KAPhB1B,EAAgBA,EAAcxD,QADnB,oBACiC,SAAU6E,GAElD,IADA,IAAIlC,EAAQ,GACHT,EAAK,EAAGA,EAAKC,UAAU5B,OAAQ2B,IACpCS,EAAMT,EAAK,GAAKC,UAAUD,GAE9B,OAAOS,EAAM,OAGbwC,EAAqB,SAAUpC,GAC/B,IAAIqC,EAAUrC,EAAErB,OAChB,IAAK0D,EACD,MAAO,GAEX,GAAIrC,EAAEG,QAAQX,IAA8B,EACxC6C,EAAUzB,EAAMa,0BAA0BzB,EAAGS,EAAeC,OAE3D,CAED,IAAI4B,EAAItC,EAAE/C,QAAQyE,EAAiB,IACnC,GAAIY,EAAE9E,OAAS,EAAG,CACd,IAAI+E,EAAUD,EAAExF,MAAM,mBAClByF,IACAF,EAAUE,EAAQ,GAAKJ,EAAYI,EAAQ,GAAKA,EAAQ,KAIpE,OAAOF,GAEPG,EAAc,IAAIC,EAAa/E,GAE/BgF,EAAiB,GACjBC,EAAa,EAEbC,EAAM,sBAcNC,KAlBJnF,EAAW8E,EAAY1E,WAgBAqC,QAAQX,IAA8B,GAGvB,QAA9B0C,EAAMU,EAAIE,KAAKpF,KAAqB,CACxC,IAAIqF,EAAYb,EAAI,GAChBc,EAAStF,EAASuF,MAAMN,EAAYT,EAAIgB,OAAOvE,OAGnD+D,KAFAG,EAAcA,GAAeG,EAAO7C,QAAQX,IAA8B,GAC3C4C,EAAmBY,GAAUA,GAC7B,IAAMD,EAAY,IACjDJ,EAAaC,EAAIjB,UAErB,IAAIzB,EAAOxC,EAASyF,UAAUR,GAI9B,OAFAD,IADAG,EAAcA,GAAe3C,EAAKC,QAAQX,IAA8B,GACxC4C,EAAmBlC,GAAQA,EAEpDsC,EAAYY,QAAQV,IAE/BpG,EAAUI,UAAU2B,6BAA+B,SAAUX,GAKzD,OAJAA,EAAWA,EACNT,QAAQoG,EAAqBC,GAC7BrG,QAAQsG,EAAcnD,GACtBnD,QAAQuG,EAAiBC,IAG3BnH,EA3RoB,GA6R3BmG,EAA8B,WAC9B,SAASA,EAAa/E,GAClB,IAAIkD,EAAQpE,KACZA,KAAKkH,aAAe,GACpBlH,KAAK0G,MAAQ,EAGbxF,EAAWA,EAAST,QAAQ,iBAAiB,SAAU6E,EAAG6B,GACtD,IAAIC,EAAY,QAAUhD,EAAMsC,MAAQ,KAGxC,OAFAtC,EAAM8C,aAAa/F,KAAKgG,GACxB/C,EAAMsC,QACCU,KAIXpH,KAAKqH,SAAWnG,EAAST,QAAQ,6BAA6B,SAAU6E,EAAGgC,EAAQC,GAC/E,IAAIH,EAAY,QAAUhD,EAAMsC,MAAQ,KAGxC,OAFAtC,EAAM8C,aAAa/F,KAAKoG,GACxBnD,EAAMsC,QACCY,EAASF,KAQxB,OALAnB,EAAa/F,UAAU0G,QAAU,SAAUtF,GACvC,IAAI8C,EAAQpE,KACZ,OAAOsB,EAAQb,QAAQ,iBAAiB,SAAU6E,EAAGoB,GAAS,OAAOtC,EAAM8C,cAAcR,OAE7FT,EAAa/F,UAAUoB,QAAU,WAAc,OAAOtB,KAAKqH,UACpDpB,EA3BuB,GA6B9BrC,EAAgB,iBAChBqD,EAAmB,oBAEnBH,EAAuB,oBACvBU,EAAe,kDAGfnF,EAAkB,IAAI0C,OAAO,IAAMnB,EAAgB4D,EAAc,OACjEvE,EAAyB,IAAI8B,OAAO,IAAM+B,EAAuBU,EAAc,OAC/E/E,EAAqB,IAAIsC,OAAO,IAAMkC,EAAmBO,EAAc,OACvExE,EAA4BY,EAAgB,iBAC5CyB,EAA8B,uCAC9BxB,EAAwB,CACxB,YACA,cAEAmB,EAAoB,6BACpBE,EAAkB,oBAClB6B,EAAe,WACfC,EAAkB,eAClBH,EAAsB,mBACtBnG,EAAa,uBAIjB,IAAIH,EAAqB,+CAIzB,IAAIkH,EAAU,wDACVC,EAAW,UAIXpD,EACA,SAAiBpD,EAAUI,GACvBtB,KAAKkB,SAAWA,EAChBlB,KAAKsB,QAAUA,GAIvB,SAASF,EAAaZ,EAAOmH,GACzB,IAAIC,EA2BR,SAAsBpH,GAMlB,IALA,IAAIqH,EAAarH,EAAM6C,MAAMqE,GACzBI,EAAc,GACdC,EAAgB,GAChBC,EAAe,EACfC,EAAoB,GACfC,EAAY,EAAGA,EAAYL,EAAW7G,OAAQkH,IAAa,CAChE,IAAIxE,EAAOmE,EAAWK,GA5CZ,MA6CNxE,GACAsE,IAEAA,EAAe,EACfC,EAAkB9G,KAAKuC,IAGnBuE,EAAkBjH,OAAS,IAC3B+G,EAAc5G,KAAK8G,EAAkBvG,KAAK,KAC1CoG,EAAY3G,KArDJ,WAsDR8G,EAAoB,IAExBH,EAAY3G,KAAKuC,IA1DZ,MA4DLA,GACAsE,IAGJC,EAAkBjH,OAAS,IAC3B+G,EAAc5G,KAAK8G,EAAkBvG,KAAK,KAC1CoG,EAAY3G,KAhEI,YAkEpB,OAAO,IAAIgH,EAAwBL,EAAYpG,KAAK,IAAKqG,GAzD5BK,CAAa5H,GACtC6H,EAAiB,EACrB,OAAOT,EAAuBU,cAAc7H,QAAQgH,GAAS,WAEzD,IADA,IAAI/E,EAAI,GACCC,EAAK,EAAGA,EAAKC,UAAU5B,OAAQ2B,IACpCD,EAAEC,GAAMC,UAAUD,GAEtB,IAAIzB,EAAWwB,EAAE,GACbpB,EAAU,GACVwB,EAASJ,EAAE,GACX6F,EAAgB,GAChBzF,GAAUA,EAAOzB,WAAW,cAC5BC,EAAUsG,EAAuBY,OAAOH,KACxCvF,EAASA,EAAO6D,UAtBJ,UAsBgC3F,OAAS,GACrDuH,EAAgB,KAEpB,IAAIzH,EAAO6G,EAAa,IAAIrD,EAAQpD,EAAUI,IAC9C,MAAO,GAAKoB,EAAE,GAAK5B,EAAKI,SAAWwB,EAAE,GAAK6F,EAAgBzH,EAAKQ,QAAUwB,KAGjF,IAAIqF,EACA,SAAiCG,EAAeE,GAC5CxI,KAAKsI,cAAgBA,EACrBtI,KAAKwI,OAASA","file":"static/js/99.40a6187b.chunk.js","sourcesContent":["/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n *\r\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\r\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\r\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\r\n */\r\nfunction scopeCss(cssText, scopeId, commentOriginalSelector) {\r\n    var sc = new ShadowCss();\r\n    return sc.shimCssText(cssText, scopeId, scopeId + '-h', scopeId + '-s', commentOriginalSelector);\r\n}\r\nvar ShadowCss = /** @class */ (function () {\r\n    function ShadowCss() {\r\n        this.strictStyling = true;\r\n    }\r\n    ShadowCss.prototype.shimCssText = function (cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {\r\n        if (hostScopeId === void 0) { hostScopeId = ''; }\r\n        if (slotScopeId === void 0) { slotScopeId = ''; }\r\n        if (commentOriginalSelector === void 0) { commentOriginalSelector = false; }\r\n        var commentsWithHash = extractCommentsWithHash(cssText);\r\n        cssText = stripComments(cssText);\r\n        var orgSelectors = [];\r\n        if (commentOriginalSelector) {\r\n            var processCommentedSelector_1 = function (rule) {\r\n                var placeholder = \"/*!@___\" + orgSelectors.length + \"___*/\";\r\n                var comment = \"/*!@\" + rule.selector + \"*/\";\r\n                orgSelectors.push({ placeholder: placeholder, comment: comment });\r\n                rule.selector = placeholder + rule.selector;\r\n                return rule;\r\n            };\r\n            cssText = processRules(cssText, function (rule) {\r\n                if (rule.selector[0] !== '@') {\r\n                    return processCommentedSelector_1(rule);\r\n                }\r\n                else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\r\n                    rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\r\n                    rule.content = processRules(rule.content, processCommentedSelector_1);\r\n                    return rule;\r\n                }\r\n                return rule;\r\n            });\r\n        }\r\n        var scopedCssText = this._scopeCssText(cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector);\r\n        cssText = [scopedCssText].concat(commentsWithHash).join('\\n');\r\n        if (commentOriginalSelector) {\r\n            orgSelectors.forEach(function (_a) {\r\n                var placeholder = _a.placeholder, comment = _a.comment;\r\n                cssText = cssText.replace(placeholder, comment);\r\n            });\r\n        }\r\n        return cssText;\r\n    };\r\n    ShadowCss.prototype._scopeCssText = function (cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {\r\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\r\n        cssText = this._insertPolyfillHostInCssText(cssText);\r\n        cssText = this._convertColonHost(cssText);\r\n        cssText = this._convertColonHostContext(cssText);\r\n        cssText = this._convertColonSlotted(cssText, slotScopeId);\r\n        cssText = this._convertShadowDOMSelectors(cssText);\r\n        if (scopeId) {\r\n            cssText = this._scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector);\r\n        }\r\n        cssText = cssText.replace(/-shadowcsshost-no-combinator/g, \".\" + hostScopeId);\r\n        cssText = cssText.replace(/>\\s*\\*\\s+([^{, ]+)/gm, ' $1 ');\r\n        return cssText.trim();\r\n    };\r\n    /*\r\n     * convert a rule like :host(.foo) > .bar { }\r\n     *\r\n     * to\r\n     *\r\n     * .foo<scopeName> > .bar\r\n    */\r\n    ShadowCss.prototype._convertColonHost = function (cssText) {\r\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\r\n    };\r\n    /*\r\n   * convert a rule like ::slotted(.foo) { }\r\n  */\r\n    ShadowCss.prototype._convertColonSlotted = function (cssText, slotAttr) {\r\n        var regExp = _cssColonSlottedRe;\r\n        return cssText.replace(regExp, function () {\r\n            var m = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                m[_i] = arguments[_i];\r\n            }\r\n            if (m[2]) {\r\n                var compound = m[2].trim();\r\n                var suffix = m[3];\r\n                var sel = '.' + slotAttr + ' > ' + compound + suffix;\r\n                return sel;\r\n            }\r\n            else {\r\n                return _polyfillHostNoCombinator + m[3];\r\n            }\r\n        });\r\n    };\r\n    /*\r\n     * convert a rule like :host-context(.foo) > .bar { }\r\n     *\r\n     * to\r\n     *\r\n     * .foo<scopeName> > .bar, .foo scopeName > .bar { }\r\n     *\r\n     * and\r\n     *\r\n     * :host-context(.foo:host) .bar { ... }\r\n     *\r\n     * to\r\n     *\r\n     * .foo<scopeName> .bar { ... }\r\n    */\r\n    ShadowCss.prototype._convertColonHostContext = function (cssText) {\r\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\r\n    };\r\n    ShadowCss.prototype._convertColonRule = function (cssText, regExp, partReplacer) {\r\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\r\n        return cssText.replace(regExp, function () {\r\n            var m = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                m[_i] = arguments[_i];\r\n            }\r\n            if (m[2]) {\r\n                var parts = m[2].split(',');\r\n                var r = [];\r\n                for (var i = 0; i < parts.length; i++) {\r\n                    var p = parts[i].trim();\r\n                    if (!p)\r\n                        break;\r\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\r\n                }\r\n                return r.join(',');\r\n            }\r\n            else {\r\n                return _polyfillHostNoCombinator + m[3];\r\n            }\r\n        });\r\n    };\r\n    ShadowCss.prototype._colonHostContextPartReplacer = function (host, part, suffix) {\r\n        if (part.indexOf(_polyfillHost) > -1) {\r\n            return this._colonHostPartReplacer(host, part, suffix);\r\n        }\r\n        else {\r\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\r\n        }\r\n    };\r\n    ShadowCss.prototype._colonHostPartReplacer = function (host, part, suffix) {\r\n        return host + part.replace(_polyfillHost, '') + suffix;\r\n    };\r\n    /*\r\n     * Convert combinators like ::shadow and pseudo-elements like ::content\r\n     * by replacing with space.\r\n    */\r\n    ShadowCss.prototype._convertShadowDOMSelectors = function (cssText) {\r\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\r\n    };\r\n    // change a selector like 'div' to 'name div'\r\n    ShadowCss.prototype._scopeSelectors = function (cssText, scopeSelector, hostSelector, slotSelector, commentOriginalSelector) {\r\n        var _this = this;\r\n        return processRules(cssText, function (rule) {\r\n            var selector = rule.selector;\r\n            var content = rule.content;\r\n            if (rule.selector[0] !== '@') {\r\n                selector =\r\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, slotSelector, _this.strictStyling);\r\n            }\r\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\r\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\r\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector, slotSelector, commentOriginalSelector);\r\n            }\r\n            selector = selector.replace(/\\s{2,}/g, ' ').trim();\r\n            return new CssRule(selector, content);\r\n        });\r\n    };\r\n    ShadowCss.prototype._scopeSelector = function (selector, scopeSelector, hostSelector, slotSelector, strict) {\r\n        var _this = this;\r\n        return selector.split(',')\r\n            .map(function (shallowPart) {\r\n            if (slotSelector && shallowPart.indexOf('.' + slotSelector) > -1) {\r\n                return shallowPart.trim();\r\n            }\r\n            if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\r\n                return strict ?\r\n                    _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector).trim() :\r\n                    _this._applySelectorScope(shallowPart, scopeSelector, hostSelector).trim();\r\n            }\r\n            else {\r\n                return shallowPart.trim();\r\n            }\r\n        })\r\n            .join(', ');\r\n    };\r\n    ShadowCss.prototype._selectorNeedsScoping = function (selector, scopeSelector) {\r\n        var re = this._makeScopeMatcher(scopeSelector);\r\n        return !re.test(selector);\r\n    };\r\n    ShadowCss.prototype._makeScopeMatcher = function (scopeSelector) {\r\n        var lre = /\\[/g;\r\n        var rre = /\\]/g;\r\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\r\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\r\n    };\r\n    ShadowCss.prototype._applySelectorScope = function (selector, scopeSelector, hostSelector) {\r\n        // Difference from webcomponents.js: scopeSelector could not be an array\r\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\r\n    };\r\n    // scope via name and [is=name]\r\n    ShadowCss.prototype._applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\r\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\r\n        _polyfillHostRe.lastIndex = 0;\r\n        if (_polyfillHostRe.test(selector)) {\r\n            var replaceBy_1 = this.strictStyling ? \".\" + hostSelector : scopeSelector;\r\n            return selector\r\n                .replace(_polyfillHostNoCombinatorRe, function (_, selector) {\r\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\r\n                    return before + replaceBy_1 + colon + after;\r\n                });\r\n            })\r\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\r\n        }\r\n        return scopeSelector + ' ' + selector;\r\n    };\r\n    ShadowCss.prototype._applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\r\n        var _this = this;\r\n        var isRe = /\\[is=([^\\]]*)\\]/g;\r\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\r\n            var parts = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                parts[_i - 1] = arguments[_i];\r\n            }\r\n            return parts[0];\r\n        });\r\n        var className = '.' + scopeSelector;\r\n        var _scopeSelectorPart = function (p) {\r\n            var scopedP = p.trim();\r\n            if (!scopedP) {\r\n                return '';\r\n            }\r\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\r\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\r\n            }\r\n            else {\r\n                // remove :host since it should be unnecessary\r\n                var t = p.replace(_polyfillHostRe, '');\r\n                if (t.length > 0) {\r\n                    var matches = t.match(/([^:]*)(:*)(.*)/);\r\n                    if (matches) {\r\n                        scopedP = matches[1] + className + matches[2] + matches[3];\r\n                    }\r\n                }\r\n            }\r\n            return scopedP;\r\n        };\r\n        var safeContent = new SafeSelector(selector);\r\n        selector = safeContent.content();\r\n        var scopedSelector = '';\r\n        var startIndex = 0;\r\n        var res;\r\n        var sep = /( |>|\\+|~(?!=))\\s*/g;\r\n        // If a selector appears before :host it should not be shimmed as it\r\n        // matches on ancestor elements and not on elements in the host's shadow\r\n        // `:host-context(div)` is transformed to\r\n        // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\r\n        // the `div` is not part of the component in the 2nd selectors and should not be scoped.\r\n        // Historically `component-tag:host` was matching the component so we also want to preserve\r\n        // this behavior to avoid breaking legacy apps (it should not match).\r\n        // The behavior should be:\r\n        // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\r\n        // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\r\n        //   `:host-context(tag)`)\r\n        var hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\r\n        // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\r\n        var shouldScope = !hasHost;\r\n        while ((res = sep.exec(selector)) !== null) {\r\n            var separator = res[1];\r\n            var part_1 = selector.slice(startIndex, res.index).trim();\r\n            shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\r\n            var scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\r\n            scopedSelector += scopedPart + \" \" + separator + \" \";\r\n            startIndex = sep.lastIndex;\r\n        }\r\n        var part = selector.substring(startIndex);\r\n        shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\r\n        scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\r\n        // replace the placeholders with their original values\r\n        return safeContent.restore(scopedSelector);\r\n    };\r\n    ShadowCss.prototype._insertPolyfillHostInCssText = function (selector) {\r\n        selector = selector\r\n            .replace(_colonHostContextRe, _polyfillHostContext)\r\n            .replace(_colonHostRe, _polyfillHost)\r\n            .replace(_colonSlottedRe, _polyfillSlotted);\r\n        return selector;\r\n    };\r\n    return ShadowCss;\r\n}());\r\nvar SafeSelector = /** @class */ (function () {\r\n    function SafeSelector(selector) {\r\n        var _this = this;\r\n        this.placeholders = [];\r\n        this.index = 0;\r\n        // Replaces attribute selectors with placeholders.\r\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\r\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\r\n            var replaceBy = \"__ph-\" + _this.index + \"__\";\r\n            _this.placeholders.push(keep);\r\n            _this.index++;\r\n            return replaceBy;\r\n        });\r\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\r\n        // WS and \"+\" would otherwise be interpreted as selector separators.\r\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\r\n            var replaceBy = \"__ph-\" + _this.index + \"__\";\r\n            _this.placeholders.push(exp);\r\n            _this.index++;\r\n            return pseudo + replaceBy;\r\n        });\r\n    }\r\n    SafeSelector.prototype.restore = function (content) {\r\n        var _this = this;\r\n        return content.replace(/__ph-(\\d+)__/g, function (_, index) { return _this.placeholders[+index]; });\r\n    };\r\n    SafeSelector.prototype.content = function () { return this._content; };\r\n    return SafeSelector;\r\n}());\r\nvar _polyfillHost = '-shadowcsshost';\r\nvar _polyfillSlotted = '-shadowcssslotted';\r\n// note: :host-context pre-processed to -shadowcsshostcontext.\r\nvar _polyfillHostContext = '-shadowcsscontext';\r\nvar _parenSuffix = ')(?:\\\\((' +\r\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\r\n    ')\\\\))?([^,{]*)';\r\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\r\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\r\nvar _cssColonSlottedRe = new RegExp('(' + _polyfillSlotted + _parenSuffix, 'gim');\r\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\r\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\r\nvar _shadowDOMSelectorsRe = [\r\n    /::shadow/g,\r\n    /::content/g\r\n];\r\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\r\nvar _polyfillHostRe = /-shadowcsshost/gim;\r\nvar _colonHostRe = /:host/gim;\r\nvar _colonSlottedRe = /::slotted/gim;\r\nvar _colonHostContextRe = /:host-context/gim;\r\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\r\nfunction stripComments(input) {\r\n    return input.replace(_commentRe, '');\r\n}\r\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\r\nfunction extractCommentsWithHash(input) {\r\n    return input.match(_commentWithHashRe) || [];\r\n}\r\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\r\nvar _curlyRe = /([{}])/g;\r\nvar OPEN_CURLY = '{';\r\nvar CLOSE_CURLY = '}';\r\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\r\nvar CssRule = /** @class */ (function () {\r\n    function CssRule(selector, content) {\r\n        this.selector = selector;\r\n        this.content = content;\r\n    }\r\n    return CssRule;\r\n}());\r\nfunction processRules(input, ruleCallback) {\r\n    var inputWithEscapedBlocks = escapeBlocks(input);\r\n    var nextBlockIndex = 0;\r\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\r\n        var m = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            m[_i] = arguments[_i];\r\n        }\r\n        var selector = m[2];\r\n        var content = '';\r\n        var suffix = m[4];\r\n        var contentPrefix = '';\r\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\r\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\r\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\r\n            contentPrefix = '{';\r\n        }\r\n        var rule = ruleCallback(new CssRule(selector, content));\r\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\r\n    });\r\n}\r\nvar StringWithEscapedBlocks = /** @class */ (function () {\r\n    function StringWithEscapedBlocks(escapedString, blocks) {\r\n        this.escapedString = escapedString;\r\n        this.blocks = blocks;\r\n    }\r\n    return StringWithEscapedBlocks;\r\n}());\r\nfunction escapeBlocks(input) {\r\n    var inputParts = input.split(_curlyRe);\r\n    var resultParts = [];\r\n    var escapedBlocks = [];\r\n    var bracketCount = 0;\r\n    var currentBlockParts = [];\r\n    for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\r\n        var part = inputParts[partIndex];\r\n        if (part === CLOSE_CURLY) {\r\n            bracketCount--;\r\n        }\r\n        if (bracketCount > 0) {\r\n            currentBlockParts.push(part);\r\n        }\r\n        else {\r\n            if (currentBlockParts.length > 0) {\r\n                escapedBlocks.push(currentBlockParts.join(''));\r\n                resultParts.push(BLOCK_PLACEHOLDER);\r\n                currentBlockParts = [];\r\n            }\r\n            resultParts.push(part);\r\n        }\r\n        if (part === OPEN_CURLY) {\r\n            bracketCount++;\r\n        }\r\n    }\r\n    if (currentBlockParts.length > 0) {\r\n        escapedBlocks.push(currentBlockParts.join(''));\r\n        resultParts.push(BLOCK_PLACEHOLDER);\r\n    }\r\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\r\n}\r\nexport { ShadowCss, scopeCss };\r\n"],"sourceRoot":""}