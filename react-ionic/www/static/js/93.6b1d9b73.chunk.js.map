{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/shadow-css-4889ae62-23996f3f.js"],"names":["_parenSuffix","_cssColonHostRe","RegExp","_cssColonHostContextRe","_cssColonSlottedRe","_polyfillHostNoCombinatorRe","_shadowDOMSelectorsRe","_polyfillHostRe","_colonHostRe","_colonSlottedRe","_colonHostContextRe","_commentRe","_commentWithHashRe","_ruleRe","_curlyRe","processRules","input","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","replace","m","_i","arguments","length","selector","content","suffix","contentPrefix","startsWith","blocks","substring","cssRule","rule","inputParts","split","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","push","join","convertColonRule","cssText","regExp","partReplacer","parts","r","i","p","trim","_polyfillHost","colonHostPartReplacer","host","colonHostContextPartReplacer","indexOf","selectorNeedsScoping","scopeSelector","makeScopeMatcher","test","applyStrictSelectorScope","hostSelector","res","className","_","_scopeSelectorPart","scopedP","lastIndex","replaceBy_1","before","colon","after","applySimpleSelectorScope","t","matches","match","safeContent","placeholders","index","keep","replaceBy","pseudo","exp","safeSelector","scopedSelector","startIndex","sep","shouldScope","exec","separator","part_1","slice","scopeSelectors","scopeSelectorText","slotSelector","commentOriginalSelector","map","shallowPart","scopeCssText","scopeId","hostScopeId","slotScopeId","reduce","result","pattern","convertShadowDOMSelectors","slotAttr","compound","sel","convertColonSlotted","convertColonHostContext","convertColonHost","scopeCss","commentsWithHash","stripComments","orgSelectors","processCommentedSelector_1","placeholder","comment","scopedCssText","__spreadArrays","forEach","_a"],"mappings":"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","file":"static/js/93.6b1d9b73.chunk.js","sourcesContent":["import { __spreadArrays } from \"tslib\";\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n *\r\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\r\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\r\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\r\n */\r\nvar safeSelector = function (selector) {\r\n    var placeholders = [];\r\n    var index = 0;\r\n    var content;\r\n    // Replaces attribute selectors with placeholders.\r\n    // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\r\n    selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\r\n        var replaceBy = \"__ph-\" + index + \"__\";\r\n        placeholders.push(keep);\r\n        index++;\r\n        return replaceBy;\r\n    });\r\n    // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\r\n    // WS and \"+\" would otherwise be interpreted as selector separators.\r\n    content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\r\n        var replaceBy = \"__ph-\" + index + \"__\";\r\n        placeholders.push(exp);\r\n        index++;\r\n        return pseudo + replaceBy;\r\n    });\r\n    var ss = {\r\n        content: content,\r\n        placeholders: placeholders,\r\n    };\r\n    return ss;\r\n};\r\nvar restoreSafeSelector = function (placeholders, content) {\r\n    return content.replace(/__ph-(\\d+)__/g, function (_, index) { return placeholders[+index]; });\r\n};\r\nvar _polyfillHost = '-shadowcsshost';\r\nvar _polyfillSlotted = '-shadowcssslotted';\r\n// note: :host-context pre-processed to -shadowcsshostcontext.\r\nvar _polyfillHostContext = '-shadowcsscontext';\r\nvar _parenSuffix = ')(?:\\\\((' +\r\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\r\n    ')\\\\))?([^,{]*)';\r\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\r\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\r\nvar _cssColonSlottedRe = new RegExp('(' + _polyfillSlotted + _parenSuffix, 'gim');\r\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\r\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\r\nvar _shadowDOMSelectorsRe = [\r\n    /::shadow/g,\r\n    /::content/g\r\n];\r\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\r\nvar _polyfillHostRe = /-shadowcsshost/gim;\r\nvar _colonHostRe = /:host/gim;\r\nvar _colonSlottedRe = /::slotted/gim;\r\nvar _colonHostContextRe = /:host-context/gim;\r\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\r\nvar stripComments = function (input) {\r\n    return input.replace(_commentRe, '');\r\n};\r\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\r\nvar extractCommentsWithHash = function (input) {\r\n    return input.match(_commentWithHashRe) || [];\r\n};\r\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\r\nvar _curlyRe = /([{}])/g;\r\nvar OPEN_CURLY = '{';\r\nvar CLOSE_CURLY = '}';\r\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\r\nvar processRules = function (input, ruleCallback) {\r\n    var inputWithEscapedBlocks = escapeBlocks(input);\r\n    var nextBlockIndex = 0;\r\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\r\n        var m = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            m[_i] = arguments[_i];\r\n        }\r\n        var selector = m[2];\r\n        var content = '';\r\n        var suffix = m[4];\r\n        var contentPrefix = '';\r\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\r\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\r\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\r\n            contentPrefix = '{';\r\n        }\r\n        var cssRule = {\r\n            selector: selector,\r\n            content: content\r\n        };\r\n        var rule = ruleCallback(cssRule);\r\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\r\n    });\r\n};\r\nvar escapeBlocks = function (input) {\r\n    var inputParts = input.split(_curlyRe);\r\n    var resultParts = [];\r\n    var escapedBlocks = [];\r\n    var bracketCount = 0;\r\n    var currentBlockParts = [];\r\n    for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\r\n        var part = inputParts[partIndex];\r\n        if (part === CLOSE_CURLY) {\r\n            bracketCount--;\r\n        }\r\n        if (bracketCount > 0) {\r\n            currentBlockParts.push(part);\r\n        }\r\n        else {\r\n            if (currentBlockParts.length > 0) {\r\n                escapedBlocks.push(currentBlockParts.join(''));\r\n                resultParts.push(BLOCK_PLACEHOLDER);\r\n                currentBlockParts = [];\r\n            }\r\n            resultParts.push(part);\r\n        }\r\n        if (part === OPEN_CURLY) {\r\n            bracketCount++;\r\n        }\r\n    }\r\n    if (currentBlockParts.length > 0) {\r\n        escapedBlocks.push(currentBlockParts.join(''));\r\n        resultParts.push(BLOCK_PLACEHOLDER);\r\n    }\r\n    var strEscapedBlocks = {\r\n        escapedString: resultParts.join(''),\r\n        blocks: escapedBlocks\r\n    };\r\n    return strEscapedBlocks;\r\n};\r\nvar insertPolyfillHostInCssText = function (selector) {\r\n    selector = selector\r\n        .replace(_colonHostContextRe, _polyfillHostContext)\r\n        .replace(_colonHostRe, _polyfillHost)\r\n        .replace(_colonSlottedRe, _polyfillSlotted);\r\n    return selector;\r\n};\r\nvar convertColonRule = function (cssText, regExp, partReplacer) {\r\n    // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\r\n    return cssText.replace(regExp, function () {\r\n        var m = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            m[_i] = arguments[_i];\r\n        }\r\n        if (m[2]) {\r\n            var parts = m[2].split(',');\r\n            var r = [];\r\n            for (var i = 0; i < parts.length; i++) {\r\n                var p = parts[i].trim();\r\n                if (!p)\r\n                    break;\r\n                r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\r\n            }\r\n            return r.join(',');\r\n        }\r\n        else {\r\n            return _polyfillHostNoCombinator + m[3];\r\n        }\r\n    });\r\n};\r\nvar colonHostPartReplacer = function (host, part, suffix) {\r\n    return host + part.replace(_polyfillHost, '') + suffix;\r\n};\r\nvar convertColonHost = function (cssText) {\r\n    return convertColonRule(cssText, _cssColonHostRe, colonHostPartReplacer);\r\n};\r\nvar colonHostContextPartReplacer = function (host, part, suffix) {\r\n    if (part.indexOf(_polyfillHost) > -1) {\r\n        return colonHostPartReplacer(host, part, suffix);\r\n    }\r\n    else {\r\n        return host + part + suffix + ', ' + part + ' ' + host + suffix;\r\n    }\r\n};\r\nvar convertColonSlotted = function (cssText, slotAttr) {\r\n    var regExp = _cssColonSlottedRe;\r\n    return cssText.replace(regExp, function () {\r\n        var m = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            m[_i] = arguments[_i];\r\n        }\r\n        if (m[2]) {\r\n            var compound = m[2].trim();\r\n            var suffix = m[3];\r\n            var sel = '.' + slotAttr + ' > ' + compound + suffix;\r\n            return sel;\r\n        }\r\n        else {\r\n            return _polyfillHostNoCombinator + m[3];\r\n        }\r\n    });\r\n};\r\nvar convertColonHostContext = function (cssText) {\r\n    return convertColonRule(cssText, _cssColonHostContextRe, colonHostContextPartReplacer);\r\n};\r\nvar convertShadowDOMSelectors = function (cssText) {\r\n    return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\r\n};\r\nvar makeScopeMatcher = function (scopeSelector) {\r\n    var lre = /\\[/g;\r\n    var rre = /\\]/g;\r\n    scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\r\n    return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\r\n};\r\nvar selectorNeedsScoping = function (selector, scopeSelector) {\r\n    var re = makeScopeMatcher(scopeSelector);\r\n    return !re.test(selector);\r\n};\r\nvar applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\r\n    // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\r\n    _polyfillHostRe.lastIndex = 0;\r\n    if (_polyfillHostRe.test(selector)) {\r\n        var replaceBy_1 = \".\" + hostSelector;\r\n        return selector\r\n            .replace(_polyfillHostNoCombinatorRe, function (_, selector) {\r\n            return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\r\n                return before + replaceBy_1 + colon + after;\r\n            });\r\n        })\r\n            .replace(_polyfillHostRe, replaceBy_1 + ' ');\r\n    }\r\n    return scopeSelector + ' ' + selector;\r\n};\r\nvar applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\r\n    var isRe = /\\[is=([^\\]]*)\\]/g;\r\n    scopeSelector = scopeSelector.replace(isRe, function (_) {\r\n        var parts = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            parts[_i - 1] = arguments[_i];\r\n        }\r\n        return parts[0];\r\n    });\r\n    var className = '.' + scopeSelector;\r\n    var _scopeSelectorPart = function (p) {\r\n        var scopedP = p.trim();\r\n        if (!scopedP) {\r\n            return '';\r\n        }\r\n        if (p.indexOf(_polyfillHostNoCombinator) > -1) {\r\n            scopedP = applySimpleSelectorScope(p, scopeSelector, hostSelector);\r\n        }\r\n        else {\r\n            // remove :host since it should be unnecessary\r\n            var t = p.replace(_polyfillHostRe, '');\r\n            if (t.length > 0) {\r\n                var matches = t.match(/([^:]*)(:*)(.*)/);\r\n                if (matches) {\r\n                    scopedP = matches[1] + className + matches[2] + matches[3];\r\n                }\r\n            }\r\n        }\r\n        return scopedP;\r\n    };\r\n    var safeContent = safeSelector(selector);\r\n    selector = safeContent.content;\r\n    var scopedSelector = '';\r\n    var startIndex = 0;\r\n    var res;\r\n    var sep = /( |>|\\+|~(?!=))\\s*/g;\r\n    // If a selector appears before :host it should not be shimmed as it\r\n    // matches on ancestor elements and not on elements in the host's shadow\r\n    // `:host-context(div)` is transformed to\r\n    // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\r\n    // the `div` is not part of the component in the 2nd selectors and should not be scoped.\r\n    // Historically `component-tag:host` was matching the component so we also want to preserve\r\n    // this behavior to avoid breaking legacy apps (it should not match).\r\n    // The behavior should be:\r\n    // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\r\n    // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\r\n    //   `:host-context(tag)`)\r\n    var hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\r\n    // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\r\n    var shouldScope = !hasHost;\r\n    while ((res = sep.exec(selector)) !== null) {\r\n        var separator = res[1];\r\n        var part_1 = selector.slice(startIndex, res.index).trim();\r\n        shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\r\n        var scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\r\n        scopedSelector += scopedPart + \" \" + separator + \" \";\r\n        startIndex = sep.lastIndex;\r\n    }\r\n    var part = selector.substring(startIndex);\r\n    shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\r\n    scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\r\n    // replace the placeholders with their original values\r\n    return restoreSafeSelector(safeContent.placeholders, scopedSelector);\r\n};\r\nvar scopeSelector = function (selector, scopeSelectorText, hostSelector, slotSelector) {\r\n    return selector.split(',')\r\n        .map(function (shallowPart) {\r\n        if (slotSelector && shallowPart.indexOf('.' + slotSelector) > -1) {\r\n            return shallowPart.trim();\r\n        }\r\n        if (selectorNeedsScoping(shallowPart, scopeSelectorText)) {\r\n            return applyStrictSelectorScope(shallowPart, scopeSelectorText, hostSelector).trim();\r\n        }\r\n        else {\r\n            return shallowPart.trim();\r\n        }\r\n    })\r\n        .join(', ');\r\n};\r\nvar scopeSelectors = function (cssText, scopeSelectorText, hostSelector, slotSelector, commentOriginalSelector) {\r\n    return processRules(cssText, function (rule) {\r\n        var selector = rule.selector;\r\n        var content = rule.content;\r\n        if (rule.selector[0] !== '@') {\r\n            selector = scopeSelector(rule.selector, scopeSelectorText, hostSelector, slotSelector);\r\n        }\r\n        else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\r\n            rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\r\n            content = scopeSelectors(rule.content, scopeSelectorText, hostSelector, slotSelector);\r\n        }\r\n        var cssRule = {\r\n            selector: selector.replace(/\\s{2,}/g, ' ').trim(),\r\n            content: content\r\n        };\r\n        return cssRule;\r\n    });\r\n};\r\nvar scopeCssText = function (cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {\r\n    cssText = insertPolyfillHostInCssText(cssText);\r\n    cssText = convertColonHost(cssText);\r\n    cssText = convertColonHostContext(cssText);\r\n    cssText = convertColonSlotted(cssText, slotScopeId);\r\n    cssText = convertShadowDOMSelectors(cssText);\r\n    if (scopeId) {\r\n        cssText = scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId);\r\n    }\r\n    cssText = cssText.replace(/-shadowcsshost-no-combinator/g, \".\" + hostScopeId);\r\n    cssText = cssText.replace(/>\\s*\\*\\s+([^{, ]+)/gm, ' $1 ');\r\n    return cssText.trim();\r\n};\r\nvar scopeCss = function (cssText, scopeId, commentOriginalSelector) {\r\n    var hostScopeId = scopeId + '-h';\r\n    var slotScopeId = scopeId + '-s';\r\n    var commentsWithHash = extractCommentsWithHash(cssText);\r\n    cssText = stripComments(cssText);\r\n    var orgSelectors = [];\r\n    if (commentOriginalSelector) {\r\n        var processCommentedSelector_1 = function (rule) {\r\n            var placeholder = \"/*!@___\" + orgSelectors.length + \"___*/\";\r\n            var comment = \"/*!@\" + rule.selector + \"*/\";\r\n            orgSelectors.push({ placeholder: placeholder, comment: comment });\r\n            rule.selector = placeholder + rule.selector;\r\n            return rule;\r\n        };\r\n        cssText = processRules(cssText, function (rule) {\r\n            if (rule.selector[0] !== '@') {\r\n                return processCommentedSelector_1(rule);\r\n            }\r\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\r\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\r\n                rule.content = processRules(rule.content, processCommentedSelector_1);\r\n                return rule;\r\n            }\r\n            return rule;\r\n        });\r\n    }\r\n    var scopedCssText = scopeCssText(cssText, scopeId, hostScopeId, slotScopeId);\r\n    cssText = __spreadArrays([scopedCssText], commentsWithHash).join('\\n');\r\n    if (commentOriginalSelector) {\r\n        orgSelectors.forEach(function (_a) {\r\n            var placeholder = _a.placeholder, comment = _a.comment;\r\n            cssText = cssText.replace(placeholder, comment);\r\n        });\r\n    }\r\n    return cssText;\r\n};\r\nexport { scopeCss };\r\n"],"sourceRoot":""}